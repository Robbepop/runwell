var searchIndex = JSON.parse('{\
"ci":{"doc":"Runs CI scripts locally on the users computer.","i":[[5,"main","ci","",null,[[]]],[5,"rustup","","Invokes the <code>rustup</code> command with the provided arguments.",null,[[]]],[5,"cargo","","Invokes the <code>cargo</code> command with the provided arguments.",null,[[]]],[5,"git","","Invokes the <code>git</code> command with the provided arguments.",null,[[]]],[5,"call","","Invokes the given command with the provided arguments.",null,[[["str",15]]]]],"p":[]},\
"runwell_entity":{"doc":"Data structures for entity component management.","i":[[0,"primary","runwell_entity","Data structure to create new unique entities.",null,null],[3,"EntityArena","runwell_entity::primary","Primary map to create new entities and store required …",null,null],[3,"Entities","","Iterator yielding shared references to allocated values …",null,null],[3,"EntitiesMut","","Iterator yielding mutable reference to allocated values …",null,null],[3,"Indices","","Iterator yielding the indices of allocated entities in …",null,null],[3,"Iter","","Iterator over the keys and shared references of their …",null,null],[3,"IterMut","","Iterator over the keys and exclusive references of their …",null,null],[3,"PhantomEntityArena","","Primary map to create new entities without the need to …",null,null],[0,"secondary","runwell_entity","Data structures to add, remove and query components for …",null,null],[0,"default_bitvec","runwell_entity::secondary","Vector-like data structure to efficiently associate a …",null,null],[3,"DefaultComponentBitVec","runwell_entity::secondary::default_bitvec","Container where every entity has a <code>bool</code> component that is …",null,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly <code>additional</code> more …",0,[[["u32",15]]]],[11,"get","","Returns the current <code>bool</code> value of the keyed entity.",0,[[["idx",3]],["bool",15]]],[11,"set","","Sets the <code>bool</code> component of the keyed entity to the …",0,[[["idx",3],["bool",15]]]],[11,"replace","","Replaces the current <code>bool</code> value (if any) of the entity …",0,[[["idx",3],["bool",15]],["bool",15]]],[11,"clear","","Clears the default component bit-vector for reusing its …",0,[[]]],[11,"components","","Returns an iterator yielding the components of the …",0,[[],["components",3]]],[11,"iter","","Returns an iterator yielding the indices and components …",0,[[],["iter",3]]],[11,"shrink_to_fit","","Shrinks the memory consumption of the default component …",0,[[]]],[3,"Iter","","Iterator over the indices and components of a default …",null,null],[3,"Components","","Iterator over the components of a default component …",null,null],[0,"default_map","runwell_entity::secondary","Map-like container to associate every entity to a …",null,null],[3,"DefaultComponentMap","runwell_entity::secondary::default_map","Container where every entity has a component that is …",null,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly <code>additional</code> more …",1,[[["u32",15]]]],[11,"clear","","Clears the default component vector for reusing its …",1,[[]]],[11,"components","","Returns an iterator yielding the components of the …",1,[[],["components",3]]],[11,"iter","","Returns an iterator yielding the indices and components …",1,[[],["iter",3]]],[11,"shrink_to_fit","","Shrinks the memory consumption of the default component …",1,[[]]],[3,"Iter","","Iterator over the indices and components of a default …",null,null],[3,"Components","","Iterator over the components of a default component map.",null,null],[0,"default_vec","runwell_entity::secondary","Vector-like container to associate every entity to a …",null,null],[3,"DefaultComponentVec","runwell_entity::secondary::default_vec","Container where every entity has a component that is …",null,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly <code>additional</code> more …",2,[[["u32",15]]]],[11,"clear","","Clears the default component vector for reusing its …",2,[[]]],[11,"components","","Returns an iterator yielding the components of the …",2,[[],["components",3]]],[11,"iter","","Returns an iterator yielding the indices and components …",2,[[],["iter",3]]],[11,"shrink_to_fit","","Shrinks the memory consumption of the default component …",2,[[]]],[3,"Iter","","Iterator over the indices and components of a default …",null,null],[3,"Components","","Iterator over the components of a default component …",null,null],[0,"map","runwell_entity::secondary","Container to associate some entities to components in a …",null,null],[3,"ComponentMap","runwell_entity::secondary::map","Sparse secondary map to associated new components for …",null,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly <code>additional</code> more …",3,[[["u32",15]]]],[11,"contains_key","","Returns <code>true</code> if the key is valid for the secondary map.",3,[[["idx",3]],["bool",15]]],[11,"len","","Returns the number of components in the secondary map.",3,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if there are no components in the secondary …",3,[[],["bool",15]]],[11,"insert","","Inserts the component for the key and returns the …",3,[[["idx",3]],["option",4]]],[11,"remove","","Removes the components for the key and returns the …",3,[[["idx",3]],["option",4]]],[11,"get","","Returns a shared reference to the component at the given …",3,[[["idx",3]],["option",4]]],[11,"get_mut","","Returns a exclusive reference to the component at the …",3,[[["idx",3]],["option",4]]],[11,"components","","Returns an iterator over shared references to the …",3,[[],["components",3]]],[11,"components_mut","","Returns an iterator over mutable references to the …",3,[[],["componentsmut",3]]],[11,"iter","","Returns an iterator over the keys and a shared reference …",3,[[],["iter",3]]],[11,"iter_mut","","Returns an iterator over the keys and an exclusive …",3,[[],["itermut",3]]],[11,"clear","","Clears the component map for reusing its memory.",3,[[]]],[11,"entry","","Gets the given key\'s corresponding entry in the map for …",3,[[["idx",3]],["entry",4]]],[11,"shrink_to_fit","","Shrinks the memory consumption of the component map to a …",3,[[]]],[4,"Entry","","A view into a single entry in a map, which may either be …",null,null],[13,"Occupied","","",4,null],[13,"Vacant","","",4,null],[11,"or_insert","","Ensures a value is in the entry by inserting the default …",4,[[]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result …",4,[[["fnonce",8]]]],[11,"key","","Returns a reference to this entry\'s key.",4,[[],["idx",3]]],[11,"and_modify","","Provides in-place mutable access to an occupied entry …",4,[[]]],[11,"or_default","","Ensures a value is in the entry by inserting the default …",4,[[]]],[3,"OccupiedEntry","","A view into an occupied entry in a <code>ComponentMap</code>. It is …",null,null],[11,"key","","Returns the key from the entry.",5,[[],["idx",3]]],[11,"remove_entry","","Take the ownership of the key and value from the map.",5,[[]]],[11,"get","","Gets a reference to the value in the entry.",5,[[]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",5,[[]]],[11,"into_mut","","Converts the <code>OccupiedEntry</code> into a mutable reference to …",5,[[]]],[11,"insert","","Sets the value of the entry, and returns the entry\'s old …",5,[[]]],[11,"remove","","Takes the value out of the entry, and returns it.",5,[[]]],[3,"VacantEntry","","A view into a vacant entry in a <code>ComponentMap</code>. It is part …",null,null],[11,"key","","Returns the key that would be used when inserting a value …",6,[[],["idx",3]]],[11,"insert","","Sets the value of the entry with the vacant entry\'s key, …",6,[[]]],[3,"Components","","Iterator yielding shared references to the components.",null,null],[3,"ComponentsMut","","Iterator yielding mutable references to the components.",null,null],[3,"Iter","","Iterator yielding keys and a shared reference to their …",null,null],[3,"IterMut","","Iterator yielding keys and an exclusive reference to …",null,null],[0,"vec","runwell_entity::secondary","Container to associate some entities to components in a …",null,null],[3,"ComponentVec","runwell_entity::secondary::vec","Dense secondary map to associated new components for …",null,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly <code>additional</code> more …",7,[[["u32",15]]]],[11,"contains_key","","Returns <code>true</code> if the key is valid for the secondary map.",7,[[["idx",3]],["bool",15]]],[11,"len","","Returns the number of components in the secondary map.",7,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if there are no components in the secondary …",7,[[],["bool",15]]],[11,"insert","","Inserts the component for the key and returns the …",7,[[["idx",3]],["option",4]]],[11,"remove","","Removes the component for the key and returns the removed …",7,[[["idx",3]],["option",4]]],[11,"get","","Returns a shared reference to the entity at the key.",7,[[["idx",3]],["option",4]]],[11,"get_mut","","Returns an exclusive reference to the entity at the key.",7,[[["idx",3]],["option",4]]],[11,"components","","Returns an iterator over shared references to the …",7,[[],["components",3]]],[11,"components_mut","","Returns an iterator over mutable references to the …",7,[[],["componentsmut",3]]],[11,"iter","","Returns an iterator over the keys and shared references …",7,[[],["iter",3]]],[11,"iter_mut","","Returns an iterator over the keys and exclusive …",7,[[],["itermut",3]]],[11,"clear","","Clears the component vector for reusing its memory.",7,[[]]],[11,"entry","","Gets the given key\'s corresponding entry in the map for …",7,[[["idx",3]],["entry",4]]],[11,"shrink_to_fit","","Shrinks the memory consumption of the component vector to …",7,[[]]],[4,"Entry","","A view into a single entry in a map, which may either be …",null,null],[13,"Occupied","","",8,null],[13,"Vacant","","",8,null],[11,"or_insert","","Ensures a value is in the entry by inserting the default …",8,[[]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result …",8,[[["fnonce",8]]]],[11,"key","","Returns a reference to this entry\'s key.",8,[[],["idx",3]]],[11,"and_modify","","Provides in-place mutable access to an occupied entry …",8,[[]]],[11,"or_default","","Ensures a value is in the entry by inserting the default …",8,[[]]],[3,"OccupiedEntry","","A view into an occupied entry in a <code>ComponentVec</code>. It is …",null,null],[11,"key","","Returns the key from the entry.",9,[[],["idx",3]]],[11,"remove_entry","","Take the ownership of the key and value from the map.",9,[[]]],[11,"get","","Gets a reference to the value in the entry.",9,[[]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",9,[[]]],[11,"into_mut","","Converts the <code>OccupiedEntry</code> into a mutable reference to …",9,[[]]],[11,"insert","","Sets the value of the entry, and returns the entry\'s old …",9,[[]]],[11,"remove","","Takes the value out of the entry, and returns it.",9,[[]]],[3,"VacantEntry","","A view into a vacant entry in a <code>ComponentVec</code>. It is part …",null,null],[11,"key","","Returns the key that would be used when inserting a value …",10,[[],["idx",3]]],[11,"insert","","Sets the value of the entry with the vacant entry\'s key, …",10,[[]]],[3,"Components","","Iterator yielding shared references to the components.",null,null],[3,"ComponentsMut","","Iterator yielding mutable references to the components.",null,null],[3,"Iter","","Iterator yielding contained keys and shared references to …",null,null],[3,"IterMut","","Iterator yielding contained keys and exclusive references …",null,null],[8,"DisplayHook","runwell_entity","A hook to customize the <code>Display</code> implementation of type …",null,null],[10,"fmt","","",11,[[["formatter",3],["idx",3]],["result",6]]],[3,"Idx","","The index of an entity allocated in an entity arena that …",null,null],[3,"RawIdx","","The raw index of an entity.",null,null],[3,"EntityArena","","Primary map to create new entities and store required …",null,null],[3,"PhantomEntityArena","","Primary map to create new entities without the need to …",null,null],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"get_hash","","",12,[[],["u64",15]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"get_hash","","",13,[[],["u64",15]]],[11,"from","runwell_entity::primary","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"into_iter","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"into_iter","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"into_iter","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"into_iter","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"into_iter","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","runwell_entity::secondary::default_bitvec","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"into_iter","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"into_iter","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","runwell_entity::secondary::default_map","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"into_iter","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"into_iter","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","runwell_entity::secondary::default_vec","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"into_iter","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"into_iter","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","runwell_entity::secondary::map","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"into_iter","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"into_iter","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"into_iter","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"into_iter","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","runwell_entity::secondary::vec","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"into_iter","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"into_iter","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"into_iter","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"into_iter","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"next_back","runwell_entity::primary","",15,[[],["option",4]]],[11,"next_back","","",16,[[],["option",4]]],[11,"nth_back","","",16,[[["usize",15]],["option",4]]],[11,"next_back","","",17,[[],["option",4]]],[11,"nth_back","","",17,[[["usize",15]],["option",4]]],[11,"next_back","","",18,[[],["option",4]]],[11,"next_back","","",19,[[],["option",4]]],[11,"size_hint","","",15,[[]]],[11,"next","","",15,[[],["option",4]]],[11,"size_hint","","",16,[[]]],[11,"next","","",16,[[],["option",4]]],[11,"nth","","",16,[[["usize",15]],["option",4]]],[11,"size_hint","","",17,[[]]],[11,"next","","",17,[[],["option",4]]],[11,"nth","","",17,[[["usize",15]],["option",4]]],[11,"size_hint","","",18,[[]]],[11,"next","","",18,[[],["option",4]]],[11,"size_hint","","",19,[[]]],[11,"next","","",19,[[],["option",4]]],[11,"size_hint","runwell_entity::secondary::default_bitvec","",21,[[]]],[11,"next","","",21,[[],["option",4]]],[11,"size_hint","","",22,[[]]],[11,"next","","",22,[[],["option",4]]],[11,"size_hint","runwell_entity::secondary::default_map","",23,[[]]],[11,"next","","",23,[[],["option",4]]],[11,"size_hint","","",24,[[]]],[11,"next","","",24,[[],["option",4]]],[11,"size_hint","runwell_entity::secondary::default_vec","",25,[[]]],[11,"next","","",25,[[],["option",4]]],[11,"size_hint","","",26,[[]]],[11,"next","","",26,[[],["option",4]]],[11,"size_hint","runwell_entity::secondary::map","",27,[[]]],[11,"next","","",27,[[],["option",4]]],[11,"size_hint","","",28,[[]]],[11,"next","","",28,[[],["option",4]]],[11,"size_hint","","",29,[[]]],[11,"next","","",29,[[],["option",4]]],[11,"size_hint","","",30,[[]]],[11,"next","","",30,[[],["option",4]]],[11,"size_hint","runwell_entity::secondary::vec","",31,[[]]],[11,"next","","",31,[[],["option",4]]],[11,"size_hint","","",32,[[]]],[11,"next","","",32,[[],["option",4]]],[11,"size_hint","","",33,[[]]],[11,"next","","",33,[[],["option",4]]],[11,"size_hint","","",34,[[]]],[11,"next","","",34,[[],["option",4]]],[11,"clone","runwell_entity","",12,[[],["rawidx",3]]],[11,"clone","","",13,[[]]],[11,"clone","runwell_entity::primary","",14,[[],["entityarena",3]]],[11,"clone","","",20,[[]]],[11,"clone","runwell_entity::secondary::default_bitvec","",0,[[]]],[11,"clone","runwell_entity::secondary::default_map","",1,[[]]],[11,"clone","runwell_entity::secondary::default_vec","",2,[[]]],[11,"clone","runwell_entity::secondary::map","",3,[[]]],[11,"clone","runwell_entity::secondary::vec","",7,[[]]],[11,"default","runwell_entity::primary","",14,[[]]],[11,"default","","",20,[[]]],[11,"default","runwell_entity::secondary::default_bitvec","",0,[[]]],[11,"default","runwell_entity::secondary::default_map","",1,[[]]],[11,"default","runwell_entity::secondary::default_vec","",2,[[]]],[11,"default","runwell_entity::secondary::map","",3,[[]]],[11,"default","runwell_entity::secondary::vec","",7,[[]]],[11,"cmp","runwell_entity","",12,[[["rawidx",3]],["ordering",4]]],[11,"cmp","","",13,[[],["ordering",4]]],[11,"eq","","",12,[[["rawidx",3]],["bool",15]]],[11,"ne","","",12,[[["rawidx",3]],["bool",15]]],[11,"eq","","",13,[[["idx",3]],["bool",15]]],[11,"eq","runwell_entity::secondary::default_bitvec","",0,[[],["bool",15]]],[11,"eq","runwell_entity::secondary::default_map","",1,[[],["bool",15]]],[11,"eq","runwell_entity::secondary::default_vec","",2,[[],["bool",15]]],[11,"eq","runwell_entity::secondary::map","",3,[[],["bool",15]]],[11,"eq","runwell_entity::secondary::vec","",7,[[],["bool",15]]],[11,"partial_cmp","runwell_entity","",12,[[["rawidx",3]],[["option",4],["ordering",4]]]],[11,"lt","","",12,[[["rawidx",3]],["bool",15]]],[11,"le","","",12,[[["rawidx",3]],["bool",15]]],[11,"gt","","",12,[[["rawidx",3]],["bool",15]]],[11,"ge","","",12,[[["rawidx",3]],["bool",15]]],[11,"partial_cmp","","",13,[[],[["option",4],["ordering",4]]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_entity::primary","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_entity::secondary::default_bitvec","",0,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_entity::secondary::default_map","",1,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_entity::secondary::default_vec","",2,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_entity::secondary::map","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_entity::secondary::vec","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_entity","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"index","runwell_entity::primary","",14,[[["idx",3]]]],[11,"index","runwell_entity::secondary::default_map","",1,[[["idx",3]]]],[11,"index","runwell_entity::secondary::default_vec","",2,[[["idx",3]]]],[11,"index","runwell_entity::secondary::map","",3,[[["idx",3]]]],[11,"index","runwell_entity::secondary::vec","",7,[[["idx",3]]]],[11,"index_mut","runwell_entity::primary","",14,[[["idx",3]]]],[11,"index_mut","runwell_entity::secondary::default_map","",1,[[["idx",3]]]],[11,"index_mut","runwell_entity::secondary::default_vec","",2,[[["idx",3]]]],[11,"index_mut","runwell_entity::secondary::map","",3,[[["idx",3]]]],[11,"index_mut","runwell_entity::secondary::vec","",7,[[["idx",3]]]],[11,"hash","runwell_entity","",12,[[]]],[11,"hash","","",13,[[]]],[11,"from_iter","runwell_entity::primary","",14,[[]]],[18,"MAX_U32","runwell_entity","The maximum <code>u32</code> raw value that is allows as underlying …",12,null],[11,"from_u32","","Constructs a raw index from an <code>u32</code> value.",12,[[["u32",15]]]],[11,"into_u32","","Converts the raw index into its underlying <code>u32</code> value.",12,[[],["u32",15]]],[11,"from_raw","","Creates a new index from a [<code>RawIdx</code>].",13,[[["rawidx",3]]]],[11,"into_raw","","Converts this index into the underlying [<code>RawIdx</code>].",13,[[],["rawidx",3]]],[11,"alloc_default","runwell_entity::primary","Allocates the given amount of new entities and …",14,[[["usize",15]],["idx",3]]],[11,"alloc","","Allocates a new entity and returns a unique index to it.",14,[[],["idx",3]]],[11,"clear","","Clears the entire entity arena.",14,[[]]],[11,"shrink_to_fit","","Reallocates the entity arena to make it take up as little …",14,[[]]],[11,"len","","Returns the number of created entities.",14,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if no entities have yet been created.",14,[[],["bool",15]]],[11,"contains_key","","Returns <code>true</code> if the entity at the index has been …",14,[[["idx",3]],["bool",15]]],[11,"get","","Returns a shared reference to the entity at the index if …",14,[[["idx",3]],["option",4]]],[11,"get_mut","","Returns an exclusive reference to the entity at the index …",14,[[["idx",3]],["option",4]]],[11,"indices","","Returns an iterator over the indices of the stored …",14,[[],["indices",3]]],[11,"values","","Returns an iterator over shared references to the …",14,[[],["entities",3]]],[11,"values_mut","","Returns an iterator over mutable references to the …",14,[[],["entitiesmut",3]]],[11,"iter","","Returns an iterator over the indices and shared …",14,[[],["iter",3]]],[11,"iter_mut","","Returns an iterator over the indices and shared …",14,[[],["itermut",3]]],[11,"alloc_some","","Allocates some <code>amount</code> of new entities returning the index …",20,[[["u32",15]],["idx",3]]],[11,"clear","","Clears the entire entity arena.",20,[[]]],[11,"len","","Returns the number of created entities.",20,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if no entities have yet been created.",20,[[],["bool",15]]],[11,"contains_key","","Returns <code>true</code> if the entity at the index has been …",20,[[["idx",3]],["bool",15]]],[11,"indices","","Returns an iterator over the indices of the stored …",20,[[],["indices",3]]]],"p":[[3,"DefaultComponentBitVec"],[3,"DefaultComponentMap"],[3,"DefaultComponentVec"],[3,"ComponentMap"],[4,"Entry"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"ComponentVec"],[4,"Entry"],[3,"OccupiedEntry"],[3,"VacantEntry"],[8,"DisplayHook"],[3,"RawIdx"],[3,"Idx"],[3,"EntityArena"],[3,"Indices"],[3,"Entities"],[3,"EntitiesMut"],[3,"Iter"],[3,"IterMut"],[3,"PhantomEntityArena"],[3,"Iter"],[3,"Components"],[3,"Iter"],[3,"Components"],[3,"Iter"],[3,"Components"],[3,"Components"],[3,"ComponentsMut"],[3,"Iter"],[3,"IterMut"],[3,"Components"],[3,"ComponentsMut"],[3,"Iter"],[3,"IterMut"]]},\
"runwell_interpreter":{"doc":"Allows to interpret the Runwell IR.","i":[[3,"EvaluationContext","runwell_interpreter","The evaluation context for the entire virtual machine.",null,null],[4,"InterpretationError","","An error that may occur while evaluating a function.",null,null],[13,"EvaluationHasTrapped","","",0,null],[13,"TriedToInitializeNonInput","","",0,null],[12,"non_input","runwell_interpreter::InterpretationError","",1,null],[12,"init","","",1,null],[13,"UnmatchingInputTypes","runwell_interpreter","",0,null],[12,"value","runwell_interpreter::InterpretationError","",2,null],[12,"given_type","","",2,null],[12,"expected_type","","",2,null],[13,"UninitializedInput","runwell_interpreter","",0,null],[12,"input","runwell_interpreter::InterpretationError","",3,null],[13,"AlreadySetReturnValue","runwell_interpreter","",0,null],[12,"return_value","runwell_interpreter::InterpretationError","",4,null],[12,"prev_return_value","","",4,null],[13,"UnmatchingInputValues","runwell_interpreter","",0,null],[12,"given_inputs","runwell_interpreter::InterpretationError","",5,null],[12,"required_inputs","","",5,null],[13,"DivisionByZero","runwell_interpreter","",0,null],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"eq","","",0,[[["interpretationerror",4]],["bool",15]]],[11,"ne","","",0,[[["interpretationerror",4]],["bool",15]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"new","","Creates a new evaluation context from the given shared …",6,[[["module",3]]]],[11,"evaluate_function","","Evaluates the given function.",6,[[["func",6]],[["result",4],["interpretationerror",4]]]]],"p":[[4,"InterpretationError"],[13,"TriedToInitializeNonInput"],[13,"UnmatchingInputTypes"],[13,"UninitializedInput"],[13,"AlreadySetReturnValue"],[13,"UnmatchingInputValues"],[3,"EvaluationContext"]]},\
"runwell_ir":{"doc":"Runwell IR data structures, SSA builder and IR …","i":[[0,"primitive","runwell_ir","Runwell primitive types and constant values.",null,null],[4,"EdgeEntity","runwell_ir::primitive","A branching edge entity.",null,null],[6,"Edge","","A unique edge entity reference.",null,null],[3,"FunctionEntity","","A function entity of the Runwell IR.",null,null],[6,"Func","","A function index.",null,null],[3,"FuncTypeEntity","","A function type entity of the Runwell IR.",null,null],[6,"FuncType","","The unique index of a function type entity of the Runwell …",null,null],[3,"LinearMemoryEntity","","A linear memory entity of the Runwell IR.",null,null],[6,"Mem","","The unique index of a linear memory entity of the Runwell …",null,null],[3,"TableEntity","","A table entity of the Runwell IR.",null,null],[6,"Table","","The unique index of a table entity of the Runwell IR.",null,null],[3,"BlockEntity","","A basic block entity of the Runwell IR.",null,null],[6,"Block","","The unique index of a basic block entity of the Runwell …",null,null],[3,"ValueEntity","","An SSA value entity of the Runwell IR.",null,null],[6,"Value","","The unique index of a value entity of the Runwell IR.",null,null],[4,"Type","","Any Runwell supported primitive type.",null,null],[13,"Ptr","","",0,null],[13,"Int","","",0,null],[13,"Float","","",0,null],[11,"bit_width","","Returns the bit width of the type.",0,[[],["u32",15]]],[11,"alignment","","Returns the alignment exponent, <code>N</code> in <code>2^N</code>.",0,[[],["u8",15]]],[11,"filter_map_int","","Returns <code>Some</code> if the type is an integer type, otherwise …",0,[[],[["inttype",4],["option",4]]]],[11,"filter_map_float","","Returns <code>Some</code> if the type is a float type, otherwise …",0,[[],[["option",4],["floattype",4]]]],[4,"IntType","","Any fixed-size integer type.",null,null],[13,"I1","","",1,null],[13,"I8","","",1,null],[13,"I16","","",1,null],[13,"I32","","",1,null],[13,"I64","","",1,null],[11,"bit_width","","Returns the bit width of the fixed-size integer type.",1,[[],["u32",15]]],[11,"alignment","","Returns the alignment exponent, <code>N</code> in <code>2^N</code>.",1,[[],["u8",15]]],[11,"max_unsigned_value","","Returns the maximum unsigned value representable by the …",1,[[],["u64",15]]],[4,"FloatType","","Any floating point number type.",null,null],[13,"F32","","",2,null],[13,"F64","","",2,null],[11,"bit_width","","Returns the bit width of the floating point number type.",2,[[],["u32",15]]],[11,"alignment","","Returns the alignment exponent, <code>N</code> in <code>2^N</code>.",2,[[],["u8",15]]],[4,"Const","","A Runwell constant value.",null,null],[13,"Ptr","","",3,null],[13,"Int","","",3,null],[13,"Float","","",3,null],[11,"zero","","Returns a zero-constant for the given type.",3,[[["type",4]],["const",4]]],[11,"ty","","Returns the type of the constant value.",3,[[],["type",4]]],[11,"into_bits64","","Returns the underlying 64-bits of the constant.",3,[[],["u64",15]]],[4,"IntConst","","A constant fixed-size integer value.",null,null],[13,"I1","","",4,null],[13,"I8","","",4,null],[13,"I16","","",4,null],[13,"I32","","",4,null],[13,"I64","","",4,null],[11,"zero","","Returns a zero-constant integer for the given type.",4,[[["inttype",4]],["intconst",4]]],[11,"ty","","Returns the type of the constant fixed-size integer.",4,[[],["type",4]]],[11,"int_ty","","Returns the type of the constant fixed-size integer.",4,[[],["inttype",4]]],[11,"into_bits64","","Returns the underlying 64-bits of the constant.",4,[[],["u64",15]]],[4,"FloatConst","","A constant floating point number value.",null,null],[13,"F32","","",5,null],[13,"F64","","",5,null],[11,"zero","","Returns a zero-constant integer for the given type.",5,[[["floattype",4]],["floatconst",4]]],[11,"ty","","Returns the type of the constant floating point number.",5,[[],["type",4]]],[11,"into_bits64","","Returns the underlying 64-bits of the constant.",5,[[],["u64",15]]],[3,"F32","","A <code>f32</code> (32-bit floating point) value.",null,null],[11,"from_bits","","Returns a 32-bit floating point number from the given …",6,[[["u32",15]]]],[11,"bits","","Returns the underlying bits of the 32-bit float.",6,[[],["u32",15]]],[3,"F64","","A <code>f64</code> (64-bit floating point) value.",null,null],[11,"from_bits","","Returns a 64-bit floating point number from the given …",7,[[["u64",15]]]],[11,"bits","","Returns the underlying bits of the 64-bit float.",7,[[],["u64",15]]],[0,"instr","runwell_ir","All Runwell IR SSA instructions.",null,null],[0,"utils","runwell_ir::instr","Utility types to construct or interact with some …",null,null],[3,"MatchBranchInstrBuilder","runwell_ir::instr::utils","Builder to construct <code>MatchBranchInstr</code> instructions.",null,null],[3,"MatchSelectInstrBuilder","","Builder used to incrementally build up a multi-value …",null,null],[3,"MatchSelectResultsIter","","Iterator over the result values of all match arms of a …",null,null],[0,"operands","runwell_ir::instr","The operands for some instructions.",null,null],[4,"BinaryFloatOp","runwell_ir::instr::operands","Binary floating point instruction operand.",null,null],[13,"Add","","Adds two floating point numbers.",8,null],[13,"Sub","","Subtracts the left-hand side floating point number from …",8,null],[13,"Mul","","Multiplies two floating point numbers.",8,null],[13,"Div","","Divides the right-hand side floating point number by the …",8,null],[13,"Min","","Evaluates the minimum of two floating point numbers.",8,null],[13,"Max","","Evaluates the maximum of two floating point numbers.",8,null],[13,"CopySign","","Takes the sign of the right-hand side floating point …",8,null],[4,"BinaryIntOp","","Binary integer operand codes.",null,null],[13,"Add","","Evaluates integer addition of two integer values.",9,null],[13,"Sub","","Subtracts the right-hand side integer from the left-hand …",9,null],[13,"Mul","","Evaluates integer multiplication of two integer values.",9,null],[13,"Sdiv","","Divides the right-hand side signed integer from the …",9,null],[13,"Udiv","","Divides the right-hand side unsigned integer from the …",9,null],[13,"Srem","","Computes the remainder of the left-hand side signed …",9,null],[13,"Urem","","Computes the remainder of the left-hand side unsigned …",9,null],[13,"And","","Computes the bit-wise and for two integer value.",9,null],[13,"Or","","Computes the bit-wise or for two integer value.",9,null],[13,"Xor","","Computes the bit-wise xor for two integer value.",9,null],[4,"CompareFloatOp","","Compares two floating point numbers by the associated …",null,null],[13,"Eq","","Equals operator.",10,null],[13,"Ne","","Not equals operator.",10,null],[13,"Le","","Unsigned less-equals operator.",10,null],[13,"Lt","","Unsigned less-then operator.",10,null],[13,"Ge","","Unsigned greater-equals operator.",10,null],[13,"Gt","","Unsigned greater-than operator.",10,null],[4,"CompareIntOp","","Compares two integers by the associated operand.",null,null],[13,"Eq","","Equals operator.",11,null],[13,"Ne","","Not equals operator.",11,null],[13,"Ule","","Unsigned less-equals operator.",11,null],[13,"Ult","","Unsigned less-then operator.",11,null],[13,"Uge","","Unsigned greater-equals operator.",11,null],[13,"Ugt","","Unsigned greater-than operator.",11,null],[13,"Sle","","Signed less-equals operator.",11,null],[13,"Slt","","Signed less-then operator.",11,null],[13,"Sge","","Signed greater-equals operator.",11,null],[13,"Sgt","","Signed greater-than operator.",11,null],[4,"ShiftIntOp","","Integer shift and rotate operand codes.",null,null],[13,"Shl","","Shifts the bits of the left-hand side integer to the left …",12,null],[13,"Sshr","","Shifts the bits of the left-hand side integer to the …",12,null],[13,"Ushr","","Shifts the bits of the left-hand side integer to the …",12,null],[13,"Rotl","","Rotates the bits of the left-hand side integer to the …",12,null],[13,"Rotr","","Rotates the bits of the left-hand side integer to the …",12,null],[4,"UnaryFloatOp","","Unary floating point instruction operand.",null,null],[13,"Abs","","Evaluates the absolute value of the floating point number.",13,null],[13,"Neg","","Negatives the floating point number.",13,null],[13,"Sqrt","","Evaluates the square root of the floating point number.",13,null],[13,"Ceil","","Rounds to ceil for the floating point number.",13,null],[13,"Floor","","Rounds to floor for the floating point number.",13,null],[13,"Truncate","","Truncates the floating point number to the next smaller …",13,null],[13,"Nearest","","Rounds the floating point number to the nearest integer …",13,null],[4,"UnaryIntOp","","Operand for unary integer instructions.",null,null],[13,"LeadingZeros","","Counts the number of leading zero bits in the source …",14,null],[13,"TrailingZeros","","Counts the number of trailing zero bits in the source …",14,null],[13,"PopCount","","Counts the number of set <code>1</code> bits in the source integer …",14,null],[3,"BinaryFloatInstr","runwell_ir::instr","The base of all binary floating point number instructions.",null,null],[3,"BinaryIntInstr","","The base of all binary integer instructions.",null,null],[3,"BranchInstr","","Unconditionally branches to another basic block.",null,null],[3,"CallIndirectInstr","","Calls a function indirectly through a table with a …",null,null],[3,"CallInstr","","Calls a function statically.",null,null],[3,"CompareFloatInstr","","A comparison instruction for comparing floating point …",null,null],[3,"CompareIntInstr","","Instruction to compare two integer values with respect to …",null,null],[3,"ConstInstr","","An instruction representing a constant value.",null,null],[3,"DemoteFloatInstr","","Demotes the source float value from source float type to …",null,null],[3,"ExtendIntInstr","","Extends the integer value from source type to destination …",null,null],[4,"FloatInstr","","An SSA floating point number instruction from the Runwell …",null,null],[13,"Unary","","",15,null],[13,"Binary","","",15,null],[13,"Compare","","",15,null],[13,"Demote","","",15,null],[13,"Promote","","",15,null],[13,"FloatToInt","","",15,null],[3,"FloatToIntInstr","","Instruction to convert a floating point number into an …",null,null],[3,"HeapAddrInstr","","Returns a pointer from the heap at the given location.",null,null],[4,"Instruction","","An SSA instruction from the Runwell IR.",null,null],[13,"Call","","",16,null],[13,"CallIndirect","","",16,null],[13,"Const","","",16,null],[13,"MemoryGrow","","",16,null],[13,"MemorySize","","",16,null],[13,"HeapAddr","","",16,null],[13,"Load","","",16,null],[13,"Store","","",16,null],[13,"Select","","",16,null],[13,"Reinterpret","","",16,null],[13,"Terminal","","",16,null],[13,"Int","","",16,null],[13,"Float","","",16,null],[4,"IntInstr","","An SSA integer instruction from the Runwell IR.",null,null],[13,"Binary","","",17,null],[13,"Unary","","",17,null],[13,"Compare","","",17,null],[13,"Extend","","",17,null],[13,"IntToFloat","","",17,null],[13,"Truncate","","",17,null],[13,"Shift","","",17,null],[3,"IntToFloatInstr","","Instruction to convert an integer into a floating point …",null,null],[3,"LoadInstr","","Loads a value of type <code>ty</code> from the given memory at the …",null,null],[3,"MatchBranchInstr","","A branching table mapping indices to branching targets.",null,null],[3,"MatchSelectInstr","","Selects a value from a table of values without IR-level …",null,null],[3,"MemoryGrowInstr","","Grows the indexed linear memory by the given amount of …",null,null],[3,"MemorySizeInstr","","Returns the current number of pages of the indexed linear …",null,null],[3,"PromoteFloatInstr","","Demotes the source float value from source float type to …",null,null],[3,"ReinterpretInstr","","Reinterprets the bytes of the source from source type to …",null,null],[3,"ReturnInstr","","Returns the returned value from to the function\'s caller.",null,null],[3,"ShiftIntInstr","","The base of all integer shift instructions.",null,null],[3,"StoreInstr","","Stores the value at the given address and offset.",null,null],[3,"TailCallIndirectInstr","","A indirect tail call instruction.",null,null],[3,"TailCallInstr","","A tail call instruction.",null,null],[4,"TerminalInstr","","A terminal SSA instruction.",null,null],[13,"Unreachable","","",18,null],[13,"Branch","","",18,null],[13,"MatchBranch","","",18,null],[13,"Return","","",18,null],[13,"TailCall","","",18,null],[13,"TailCallIndirect","","",18,null],[3,"TruncateIntInstr","","Truncates the integer value from source type to …",null,null],[3,"UnaryFloatInstr","","The base of all unary floating point number instructions.",null,null],[3,"UnaryIntInstr","","The base of all unary integer instructions.",null,null],[8,"DisplayEdge","runwell_ir","Allows to customize display of branching edges in the …",null,null],[10,"display_edge","","Displays the given branching edge using the formatter.",19,[[["edge",6],["write",8]],["result",6]]],[8,"DisplayInstruction","","Implemented by all Runwell IR instructions to display …",null,null],[10,"display_instruction","","",20,[[["displayedge",8],["write",8],["indent",3]],["result",6]]],[3,"Indent","","A single indentation.",null,null],[8,"VisitEdges","","Allows to immutably visit all edges in an instruction.",null,null],[10,"visit_edges","","Visits every edge in the instruction by the given visitor.",21,[[]]],[8,"VisitEdgesMut","","Allows to visit all edges in an instruction by mutable …",null,null],[10,"visit_edges_mut","","Visits every edge in the instruction by mutable reference …",22,[[]]],[3,"ImmU32","","An immediate <code>u32</code> value of a Runwell IR instruction.",null,null],[8,"VisitValues","","Allows to immutably visit all values in an instruction.",null,null],[10,"visit_values","","Visits every value in the instruction by the given …",23,[[]]],[8,"VisitValuesMut","","Allows to visit all values in an instruction by mutable …",null,null],[10,"visit_values_mut","","Visits every value in the instruction by mutable …",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"to_string","","",25,[[],["string",3]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","runwell_ir::instr","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"to_string","","",26,[[],["string",3]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"get_hash","","",26,[[],["u64",15]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"to_string","","",27,[[],["string",3]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"get_hash","","",27,[[],["u64",15]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"to_string","","",28,[[],["string",3]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"get_hash","","",28,[[],["u64",15]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"to_string","","",29,[[],["string",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"get_hash","","",29,[[],["u64",15]]],[11,"from","runwell_ir::instr::operands","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"get_hash","","",8,[[],["u64",15]]],[11,"from","runwell_ir::instr","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"to_string","","",30,[[],["string",3]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"get_hash","","",30,[[],["u64",15]]],[11,"from","runwell_ir::instr::operands","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"get_hash","","",10,[[],["u64",15]]],[11,"from","runwell_ir::instr","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"to_string","","",31,[[],["string",3]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"get_hash","","",31,[[],["u64",15]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"to_string","","",32,[[],["string",3]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"get_hash","","",32,[[],["u64",15]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"to_string","","",33,[[],["string",3]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"get_hash","","",33,[[],["u64",15]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"to_string","","",34,[[],["string",3]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"get_hash","","",34,[[],["u64",15]]],[11,"from","runwell_ir::instr::operands","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"get_hash","","",13,[[],["u64",15]]],[11,"from","runwell_ir::instr","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"to_string","","",35,[[],["string",3]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"get_hash","","",35,[[],["u64",15]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"get_hash","","",15,[[],["u64",15]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"to_string","","",36,[[],["string",3]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"get_hash","","",36,[[],["u64",15]]],[11,"from","runwell_ir::instr::operands","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"get_hash","","",9,[[],["u64",15]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"get_hash","","",11,[[],["u64",15]]],[11,"from","runwell_ir::instr","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"to_string","","",37,[[],["string",3]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"get_hash","","",37,[[],["u64",15]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"to_string","","",38,[[],["string",3]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"get_hash","","",38,[[],["u64",15]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"to_string","","",39,[[],["string",3]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"get_hash","","",39,[[],["u64",15]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"to_string","","",40,[[],["string",3]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"get_hash","","",40,[[],["u64",15]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"to_string","","",41,[[],["string",3]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"get_hash","","",41,[[],["u64",15]]],[11,"from","runwell_ir::instr::operands","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"get_hash","","",12,[[],["u64",15]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"get_hash","","",14,[[],["u64",15]]],[11,"from","runwell_ir::instr","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"to_string","","",42,[[],["string",3]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"get_hash","","",42,[[],["u64",15]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"get_hash","","",17,[[],["u64",15]]],[11,"from","runwell_ir","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"to_string","","",43,[[],["string",3]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"get_hash","","",43,[[],["u64",15]]],[11,"from","runwell_ir::instr","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"to_string","","",44,[[],["string",3]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"get_hash","","",44,[[],["u64",15]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"to_string","","",45,[[],["string",3]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"get_hash","","",45,[[],["u64",15]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"to_string","","",46,[[],["string",3]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"get_hash","","",46,[[],["u64",15]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"to_string","","",47,[[],["string",3]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"get_hash","","",47,[[],["u64",15]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"to_string","","",48,[[],["string",3]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"get_hash","","",48,[[],["u64",15]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"get_hash","","",49,[[],["u64",15]]],[11,"from","runwell_ir::instr::utils","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"into_iter","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","runwell_ir::instr","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"get_hash","","",18,[[],["u64",15]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"to_string","","",52,[[],["string",3]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"get_hash","","",52,[[],["u64",15]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"get_hash","","",53,[[],["u64",15]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"to_string","","",54,[[],["string",3]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"get_hash","","",54,[[],["u64",15]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"to_string","","",55,[[],["string",3]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"get_hash","","",55,[[],["u64",15]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"get_hash","","",56,[[],["u64",15]]],[11,"from","runwell_ir::instr::utils","",57,[[]]],[11,"into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","runwell_ir::instr","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"get_hash","","",16,[[],["u64",15]]],[11,"from","runwell_ir::primitive","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"get_hash","","",0,[[],["u64",15]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"get_hash","","",1,[[],["u64",15]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"get_hash","","",2,[[],["u64",15]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"get_hash","","",3,[[],["u64",15]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"get_hash","","",4,[[],["u64",15]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"get_hash","","",5,[[],["u64",15]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"get_hash","","",6,[[],["u64",15]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"get_hash","","",7,[[],["u64",15]]],[11,"display_instruction","runwell_ir::instr","",49,[[["displayedge",8],["write",8],["indent",3]],["result",6]]],[11,"display_instruction","","",18,[[["displayedge",8],["write",8],["indent",3]],["result",6]]],[11,"display_instruction","","",53,[[["displayedge",8],["write",8],["indent",3]],["result",6]]],[11,"display_instruction","","",56,[[["displayedge",8],["write",8],["indent",3]],["result",6]]],[11,"display_instruction","","",16,[[["displayedge",8],["write",8],["indent",3]],["result",6]]],[11,"visit_edges","","",18,[[]]],[11,"visit_edges","","",53,[[]]],[11,"visit_edges","","",56,[[]]],[11,"visit_edges","","",16,[[]]],[11,"visit_edges_mut","","",18,[[]]],[11,"visit_edges_mut","","",53,[[]]],[11,"visit_edges_mut","","",56,[[]]],[11,"visit_edges_mut","","",16,[[]]],[11,"visit_values","","",26,[[]]],[11,"visit_values","","",27,[[]]],[11,"visit_values","","",28,[[]]],[11,"visit_values","","",29,[[]]],[11,"visit_values","","",30,[[]]],[11,"visit_values","","",31,[[]]],[11,"visit_values","","",32,[[]]],[11,"visit_values","","",33,[[]]],[11,"visit_values","","",34,[[]]],[11,"visit_values","","",35,[[]]],[11,"visit_values","","",15,[[]]],[11,"visit_values","","",36,[[]]],[11,"visit_values","","",37,[[]]],[11,"visit_values","","",38,[[]]],[11,"visit_values","","",39,[[]]],[11,"visit_values","","",40,[[]]],[11,"visit_values","","",41,[[]]],[11,"visit_values","","",42,[[]]],[11,"visit_values","","",17,[[]]],[11,"visit_values","","",44,[[]]],[11,"visit_values","","",45,[[]]],[11,"visit_values","","",46,[[]]],[11,"visit_values","","",47,[[]]],[11,"visit_values","","",49,[[]]],[11,"visit_values","","",18,[[]]],[11,"visit_values","","",52,[[]]],[11,"visit_values","","",54,[[]]],[11,"visit_values","","",55,[[]]],[11,"visit_values","","",56,[[]]],[11,"visit_values","","",16,[[]]],[11,"visit_values_mut","","",26,[[]]],[11,"visit_values_mut","","",27,[[]]],[11,"visit_values_mut","","",28,[[]]],[11,"visit_values_mut","","",29,[[]]],[11,"visit_values_mut","","",30,[[]]],[11,"visit_values_mut","","",31,[[]]],[11,"visit_values_mut","","",32,[[]]],[11,"visit_values_mut","","",33,[[]]],[11,"visit_values_mut","","",34,[[]]],[11,"visit_values_mut","","",35,[[]]],[11,"visit_values_mut","","",15,[[]]],[11,"visit_values_mut","","",36,[[]]],[11,"visit_values_mut","","",37,[[]]],[11,"visit_values_mut","","",38,[[]]],[11,"visit_values_mut","","",39,[[]]],[11,"visit_values_mut","","",40,[[]]],[11,"visit_values_mut","","",41,[[]]],[11,"visit_values_mut","","",42,[[]]],[11,"visit_values_mut","","",17,[[]]],[11,"visit_values_mut","","",44,[[]]],[11,"visit_values_mut","","",45,[[]]],[11,"visit_values_mut","","",46,[[]]],[11,"visit_values_mut","","",47,[[]]],[11,"visit_values_mut","","",49,[[]]],[11,"visit_values_mut","","",18,[[]]],[11,"visit_values_mut","","",52,[[]]],[11,"visit_values_mut","","",54,[[]]],[11,"visit_values_mut","","",55,[[]]],[11,"visit_values_mut","","",56,[[]]],[11,"visit_values_mut","","",16,[[]]],[11,"from","","",15,[[["floattointinstr",3]],["floatinstr",4]]],[11,"from","","",15,[[["binaryfloatinstr",3]],["floatinstr",4]]],[11,"from","","",15,[[["demotefloatinstr",3]],["floatinstr",4]]],[11,"from","","",15,[[["comparefloatinstr",3]],["floatinstr",4]]],[11,"from","","",15,[[["promotefloatinstr",3]],["floatinstr",4]]],[11,"from","","",15,[[["unaryfloatinstr",3]],["floatinstr",4]]],[11,"from","","",16,[[["comparefloatinstr",3]]]],[11,"from","","",16,[[["demotefloatinstr",3]]]],[11,"from","","",16,[[["promotefloatinstr",3]]]],[11,"from","","",16,[[["floattointinstr",3]]]],[11,"from","","",16,[[["unaryfloatinstr",3]]]],[11,"from","","",16,[[["binaryfloatinstr",3]]]],[11,"from","","",17,[[["unaryintinstr",3]],["intinstr",4]]],[11,"from","","",17,[[["binaryintinstr",3]],["intinstr",4]]],[11,"from","","",17,[[["inttofloatinstr",3]],["intinstr",4]]],[11,"from","","",17,[[["compareintinstr",3]],["intinstr",4]]],[11,"from","","",17,[[["shiftintinstr",3]],["intinstr",4]]],[11,"from","","",17,[[["extendintinstr",3]],["intinstr",4]]],[11,"from","","",17,[[["truncateintinstr",3]],["intinstr",4]]],[11,"from","","",16,[[["binaryintinstr",3]]]],[11,"from","","",16,[[["unaryintinstr",3]]]],[11,"from","","",16,[[["compareintinstr",3]]]],[11,"from","","",16,[[["truncateintinstr",3]]]],[11,"from","","",16,[[["inttofloatinstr",3]]]],[11,"from","","",16,[[["extendintinstr",3]]]],[11,"from","","",16,[[["shiftintinstr",3]]]],[11,"from","runwell_ir","",43,[[["u32",15]],["immu32",3]]],[11,"from","runwell_ir::instr","",18,[[["branchinstr",3]],["terminalinstr",4]]],[11,"from","","",18,[[["matchbranchinstr",3]],["terminalinstr",4]]],[11,"from","","",18,[[["returninstr",3]],["terminalinstr",4]]],[11,"from","","",18,[[["tailcallinstr",3]],["terminalinstr",4]]],[11,"from","","",18,[[],["terminalinstr",4]]],[11,"from","","",18,[[["tailcallindirectinstr",3]],["terminalinstr",4]]],[11,"from","","",54,[[["callinstr",3]],["tailcallinstr",3]]],[11,"from","","",55,[[["callindirectinstr",3]],["tailcallindirectinstr",3]]],[11,"from","","",16,[[["returninstr",3]]]],[11,"from","","",16,[[["branchinstr",3]]]],[11,"from","","",16,[[["matchbranchinstr",3]]]],[11,"from","","",16,[[["tailcallinstr",3]]]],[11,"from","","",16,[[["tailcallindirectinstr",3]]]],[11,"from","","",16,[[["loadinstr",3]],["instruction",4]]],[11,"from","","",16,[[["memorygrowinstr",3]],["instruction",4]]],[11,"from","","",16,[[["reinterpretinstr",3]],["instruction",4]]],[11,"from","","",16,[[["memorysizeinstr",3]],["instruction",4]]],[11,"from","","",16,[[["constinstr",3]],["instruction",4]]],[11,"from","","",16,[[["terminalinstr",4]],["instruction",4]]],[11,"from","","",16,[[["callinstr",3]],["instruction",4]]],[11,"from","","",16,[[["storeinstr",3]],["instruction",4]]],[11,"from","","",16,[[["matchselectinstr",3]],["instruction",4]]],[11,"from","","",16,[[["intinstr",4]],["instruction",4]]],[11,"from","","",16,[[["callindirectinstr",3]],["instruction",4]]],[11,"from","","",16,[[["heapaddrinstr",3]],["instruction",4]]],[11,"from","","",16,[[["floatinstr",4]],["instruction",4]]],[11,"from","runwell_ir::primitive","",0,[[["floattype",4]],["type",4]]],[11,"from","","",0,[[],["type",4]]],[11,"from","","",0,[[["inttype",4]],["type",4]]],[11,"from","","",3,[[["u32",15]],["const",4]]],[11,"from","","",3,[[["intconst",4]],["const",4]]],[11,"from","","",3,[[["floatconst",4]],["const",4]]],[11,"from","","",6,[[["f32",15]]]],[11,"from","","",3,[[["f32",3]]]],[11,"from","","",7,[[["f64",15]]]],[11,"from","","",3,[[["f64",3]]]],[11,"next_back","runwell_ir::instr::utils","",51,[[],["option",4]]],[11,"nth_back","","",51,[[["usize",15]],["option",4]]],[11,"size_hint","","",51,[[]]],[11,"next","","",51,[[],["option",4]]],[11,"nth","","",51,[[["usize",15]],["option",4]]],[11,"clone","runwell_ir","",25,[[],["indent",3]]],[11,"clone","runwell_ir::instr","",26,[[],["callinstr",3]]],[11,"clone","","",27,[[],["callindirectinstr",3]]],[11,"clone","","",28,[[],["constinstr",3]]],[11,"clone","","",29,[[],["reinterpretinstr",3]]],[11,"clone","runwell_ir::instr::operands","",8,[[],["binaryfloatop",4]]],[11,"clone","runwell_ir::instr","",30,[[],["binaryfloatinstr",3]]],[11,"clone","runwell_ir::instr::operands","",10,[[],["comparefloatop",4]]],[11,"clone","runwell_ir::instr","",31,[[],["comparefloatinstr",3]]],[11,"clone","","",32,[[],["demotefloatinstr",3]]],[11,"clone","","",33,[[],["promotefloatinstr",3]]],[11,"clone","","",34,[[],["floattointinstr",3]]],[11,"clone","runwell_ir::instr::operands","",13,[[],["unaryfloatop",4]]],[11,"clone","runwell_ir::instr","",35,[[],["unaryfloatinstr",3]]],[11,"clone","","",15,[[],["floatinstr",4]]],[11,"clone","","",36,[[],["binaryintinstr",3]]],[11,"clone","runwell_ir::instr::operands","",9,[[],["binaryintop",4]]],[11,"clone","","",11,[[],["compareintop",4]]],[11,"clone","runwell_ir::instr","",37,[[],["compareintinstr",3]]],[11,"clone","","",38,[[],["truncateintinstr",3]]],[11,"clone","","",39,[[],["extendintinstr",3]]],[11,"clone","","",40,[[],["inttofloatinstr",3]]],[11,"clone","","",41,[[],["shiftintinstr",3]]],[11,"clone","runwell_ir::instr::operands","",12,[[],["shiftintop",4]]],[11,"clone","","",14,[[],["unaryintop",4]]],[11,"clone","runwell_ir::instr","",42,[[],["unaryintinstr",3]]],[11,"clone","","",17,[[],["intinstr",4]]],[11,"clone","runwell_ir","",43,[[],["immu32",3]]],[11,"clone","runwell_ir::instr","",44,[[],["heapaddrinstr",3]]],[11,"clone","","",45,[[],["loadinstr",3]]],[11,"clone","","",46,[[],["storeinstr",3]]],[11,"clone","","",47,[[],["memorygrowinstr",3]]],[11,"clone","","",48,[[],["memorysizeinstr",3]]],[11,"clone","","",49,[[],["matchselectinstr",3]]],[11,"clone","","",18,[[],["terminalinstr",4]]],[11,"clone","","",52,[[],["returninstr",3]]],[11,"clone","","",53,[[],["branchinstr",3]]],[11,"clone","","",54,[[],["tailcallinstr",3]]],[11,"clone","","",55,[[],["tailcallindirectinstr",3]]],[11,"clone","","",56,[[],["matchbranchinstr",3]]],[11,"clone","","",16,[[],["instruction",4]]],[11,"clone","runwell_ir::primitive","",63,[[],["blockentity",3]]],[11,"clone","","",64,[[],["valueentity",3]]],[11,"clone","","",0,[[],["type",4]]],[11,"clone","","",1,[[],["inttype",4]]],[11,"clone","","",2,[[],["floattype",4]]],[11,"clone","","",3,[[],["const",4]]],[11,"clone","","",4,[[],["intconst",4]]],[11,"clone","","",5,[[],["floatconst",4]]],[11,"clone","","",6,[[],["f32",3]]],[11,"clone","","",7,[[],["f64",3]]],[11,"default","runwell_ir","",25,[[],["indent",3]]],[11,"default","runwell_ir::primitive","",59,[[],["functionentity",3]]],[11,"default","","",60,[[],["functypeentity",3]]],[11,"default","","",61,[[],["linearmemoryentity",3]]],[11,"default","","",62,[[],["tableentity",3]]],[11,"default","","",63,[[],["blockentity",3]]],[11,"default","","",64,[[],["valueentity",3]]],[11,"default","","",6,[[]]],[11,"default","","",7,[[]]],[11,"cmp","runwell_ir::instr","",26,[[["callinstr",3]],["ordering",4]]],[11,"cmp","","",27,[[["callindirectinstr",3]],["ordering",4]]],[11,"cmp","","",28,[[["constinstr",3]],["ordering",4]]],[11,"cmp","","",29,[[["reinterpretinstr",3]],["ordering",4]]],[11,"cmp","runwell_ir::instr::operands","",8,[[["binaryfloatop",4]],["ordering",4]]],[11,"cmp","runwell_ir::instr","",30,[[["binaryfloatinstr",3]],["ordering",4]]],[11,"cmp","runwell_ir::instr::operands","",10,[[["comparefloatop",4]],["ordering",4]]],[11,"cmp","runwell_ir::instr","",31,[[["comparefloatinstr",3]],["ordering",4]]],[11,"cmp","","",32,[[["demotefloatinstr",3]],["ordering",4]]],[11,"cmp","","",33,[[["promotefloatinstr",3]],["ordering",4]]],[11,"cmp","","",34,[[["floattointinstr",3]],["ordering",4]]],[11,"cmp","runwell_ir::instr::operands","",13,[[["unaryfloatop",4]],["ordering",4]]],[11,"cmp","runwell_ir::instr","",35,[[["unaryfloatinstr",3]],["ordering",4]]],[11,"cmp","","",15,[[["floatinstr",4]],["ordering",4]]],[11,"cmp","","",36,[[["binaryintinstr",3]],["ordering",4]]],[11,"cmp","runwell_ir::instr::operands","",9,[[["binaryintop",4]],["ordering",4]]],[11,"cmp","","",11,[[["compareintop",4]],["ordering",4]]],[11,"cmp","runwell_ir::instr","",37,[[["compareintinstr",3]],["ordering",4]]],[11,"cmp","","",38,[[["truncateintinstr",3]],["ordering",4]]],[11,"cmp","","",39,[[["extendintinstr",3]],["ordering",4]]],[11,"cmp","","",40,[[["inttofloatinstr",3]],["ordering",4]]],[11,"cmp","","",41,[[["shiftintinstr",3]],["ordering",4]]],[11,"cmp","runwell_ir::instr::operands","",12,[[["shiftintop",4]],["ordering",4]]],[11,"cmp","","",14,[[["unaryintop",4]],["ordering",4]]],[11,"cmp","runwell_ir::instr","",42,[[["unaryintinstr",3]],["ordering",4]]],[11,"cmp","","",17,[[["intinstr",4]],["ordering",4]]],[11,"cmp","runwell_ir","",43,[[["immu32",3]],["ordering",4]]],[11,"cmp","runwell_ir::instr","",44,[[["heapaddrinstr",3]],["ordering",4]]],[11,"cmp","","",45,[[["loadinstr",3]],["ordering",4]]],[11,"cmp","","",46,[[["storeinstr",3]],["ordering",4]]],[11,"cmp","","",47,[[["memorygrowinstr",3]],["ordering",4]]],[11,"cmp","","",48,[[["memorysizeinstr",3]],["ordering",4]]],[11,"cmp","","",49,[[["matchselectinstr",3]],["ordering",4]]],[11,"cmp","","",18,[[["terminalinstr",4]],["ordering",4]]],[11,"cmp","","",52,[[["returninstr",3]],["ordering",4]]],[11,"cmp","","",53,[[["branchinstr",3]],["ordering",4]]],[11,"cmp","","",54,[[["tailcallinstr",3]],["ordering",4]]],[11,"cmp","","",55,[[["tailcallindirectinstr",3]],["ordering",4]]],[11,"cmp","","",56,[[["matchbranchinstr",3]],["ordering",4]]],[11,"cmp","runwell_ir::primitive","",0,[[["type",4]],["ordering",4]]],[11,"cmp","","",1,[[["inttype",4]],["ordering",4]]],[11,"cmp","","",2,[[["floattype",4]],["ordering",4]]],[11,"cmp","","",3,[[["const",4]],["ordering",4]]],[11,"cmp","","",4,[[["intconst",4]],["ordering",4]]],[11,"cmp","","",5,[[["floatconst",4]],["ordering",4]]],[11,"cmp","","",6,[[["f32",3]],["ordering",4]]],[11,"cmp","","",7,[[["f64",3]],["ordering",4]]],[11,"eq","runwell_ir::instr","",26,[[["callinstr",3]],["bool",15]]],[11,"ne","","",26,[[["callinstr",3]],["bool",15]]],[11,"eq","","",27,[[["callindirectinstr",3]],["bool",15]]],[11,"ne","","",27,[[["callindirectinstr",3]],["bool",15]]],[11,"eq","","",28,[[["constinstr",3]],["bool",15]]],[11,"ne","","",28,[[["constinstr",3]],["bool",15]]],[11,"eq","","",29,[[["reinterpretinstr",3]],["bool",15]]],[11,"ne","","",29,[[["reinterpretinstr",3]],["bool",15]]],[11,"eq","runwell_ir::instr::operands","",8,[[["binaryfloatop",4]],["bool",15]]],[11,"eq","runwell_ir::instr","",30,[[["binaryfloatinstr",3]],["bool",15]]],[11,"ne","","",30,[[["binaryfloatinstr",3]],["bool",15]]],[11,"eq","runwell_ir::instr::operands","",10,[[["comparefloatop",4]],["bool",15]]],[11,"eq","runwell_ir::instr","",31,[[["comparefloatinstr",3]],["bool",15]]],[11,"ne","","",31,[[["comparefloatinstr",3]],["bool",15]]],[11,"eq","","",32,[[["demotefloatinstr",3]],["bool",15]]],[11,"ne","","",32,[[["demotefloatinstr",3]],["bool",15]]],[11,"eq","","",33,[[["promotefloatinstr",3]],["bool",15]]],[11,"ne","","",33,[[["promotefloatinstr",3]],["bool",15]]],[11,"eq","","",34,[[["floattointinstr",3]],["bool",15]]],[11,"ne","","",34,[[["floattointinstr",3]],["bool",15]]],[11,"eq","runwell_ir::instr::operands","",13,[[["unaryfloatop",4]],["bool",15]]],[11,"eq","runwell_ir::instr","",35,[[["unaryfloatinstr",3]],["bool",15]]],[11,"ne","","",35,[[["unaryfloatinstr",3]],["bool",15]]],[11,"eq","","",15,[[["floatinstr",4]],["bool",15]]],[11,"ne","","",15,[[["floatinstr",4]],["bool",15]]],[11,"eq","","",36,[[["binaryintinstr",3]],["bool",15]]],[11,"ne","","",36,[[["binaryintinstr",3]],["bool",15]]],[11,"eq","runwell_ir::instr::operands","",9,[[["binaryintop",4]],["bool",15]]],[11,"eq","","",11,[[["compareintop",4]],["bool",15]]],[11,"eq","runwell_ir::instr","",37,[[["compareintinstr",3]],["bool",15]]],[11,"ne","","",37,[[["compareintinstr",3]],["bool",15]]],[11,"eq","","",38,[[["truncateintinstr",3]],["bool",15]]],[11,"ne","","",38,[[["truncateintinstr",3]],["bool",15]]],[11,"eq","","",39,[[["extendintinstr",3]],["bool",15]]],[11,"ne","","",39,[[["extendintinstr",3]],["bool",15]]],[11,"eq","","",40,[[["inttofloatinstr",3]],["bool",15]]],[11,"ne","","",40,[[["inttofloatinstr",3]],["bool",15]]],[11,"eq","","",41,[[["shiftintinstr",3]],["bool",15]]],[11,"ne","","",41,[[["shiftintinstr",3]],["bool",15]]],[11,"eq","runwell_ir::instr::operands","",12,[[["shiftintop",4]],["bool",15]]],[11,"eq","","",14,[[["unaryintop",4]],["bool",15]]],[11,"eq","runwell_ir::instr","",42,[[["unaryintinstr",3]],["bool",15]]],[11,"ne","","",42,[[["unaryintinstr",3]],["bool",15]]],[11,"eq","","",17,[[["intinstr",4]],["bool",15]]],[11,"ne","","",17,[[["intinstr",4]],["bool",15]]],[11,"eq","runwell_ir","",43,[[["immu32",3]],["bool",15]]],[11,"ne","","",43,[[["immu32",3]],["bool",15]]],[11,"eq","runwell_ir::instr","",44,[[["heapaddrinstr",3]],["bool",15]]],[11,"ne","","",44,[[["heapaddrinstr",3]],["bool",15]]],[11,"eq","","",45,[[["loadinstr",3]],["bool",15]]],[11,"ne","","",45,[[["loadinstr",3]],["bool",15]]],[11,"eq","","",46,[[["storeinstr",3]],["bool",15]]],[11,"ne","","",46,[[["storeinstr",3]],["bool",15]]],[11,"eq","","",47,[[["memorygrowinstr",3]],["bool",15]]],[11,"ne","","",47,[[["memorygrowinstr",3]],["bool",15]]],[11,"eq","","",48,[[["memorysizeinstr",3]],["bool",15]]],[11,"ne","","",48,[[["memorysizeinstr",3]],["bool",15]]],[11,"eq","","",49,[[["matchselectinstr",3]],["bool",15]]],[11,"ne","","",49,[[["matchselectinstr",3]],["bool",15]]],[11,"eq","","",18,[[["terminalinstr",4]],["bool",15]]],[11,"ne","","",18,[[["terminalinstr",4]],["bool",15]]],[11,"eq","","",52,[[["returninstr",3]],["bool",15]]],[11,"ne","","",52,[[["returninstr",3]],["bool",15]]],[11,"eq","","",53,[[["branchinstr",3]],["bool",15]]],[11,"ne","","",53,[[["branchinstr",3]],["bool",15]]],[11,"eq","","",54,[[["tailcallinstr",3]],["bool",15]]],[11,"ne","","",54,[[["tailcallinstr",3]],["bool",15]]],[11,"eq","","",55,[[["tailcallindirectinstr",3]],["bool",15]]],[11,"ne","","",55,[[["tailcallindirectinstr",3]],["bool",15]]],[11,"eq","","",56,[[["matchbranchinstr",3]],["bool",15]]],[11,"ne","","",56,[[["matchbranchinstr",3]],["bool",15]]],[11,"eq","","",16,[[["instruction",4]],["bool",15]]],[11,"ne","","",16,[[["instruction",4]],["bool",15]]],[11,"eq","runwell_ir::primitive","",0,[[["type",4]],["bool",15]]],[11,"ne","","",0,[[["type",4]],["bool",15]]],[11,"eq","","",1,[[["inttype",4]],["bool",15]]],[11,"eq","","",2,[[["floattype",4]],["bool",15]]],[11,"eq","","",3,[[["const",4]],["bool",15]]],[11,"ne","","",3,[[["const",4]],["bool",15]]],[11,"eq","","",4,[[["intconst",4]],["bool",15]]],[11,"ne","","",4,[[["intconst",4]],["bool",15]]],[11,"eq","","",5,[[["floatconst",4]],["bool",15]]],[11,"ne","","",5,[[["floatconst",4]],["bool",15]]],[11,"eq","","",6,[[["f32",3]],["bool",15]]],[11,"ne","","",6,[[["f32",3]],["bool",15]]],[11,"eq","","",7,[[["f64",3]],["bool",15]]],[11,"ne","","",7,[[["f64",3]],["bool",15]]],[11,"partial_cmp","runwell_ir::instr","",26,[[["callinstr",3]],[["option",4],["ordering",4]]]],[11,"lt","","",26,[[["callinstr",3]],["bool",15]]],[11,"le","","",26,[[["callinstr",3]],["bool",15]]],[11,"gt","","",26,[[["callinstr",3]],["bool",15]]],[11,"ge","","",26,[[["callinstr",3]],["bool",15]]],[11,"partial_cmp","","",27,[[["callindirectinstr",3]],[["option",4],["ordering",4]]]],[11,"lt","","",27,[[["callindirectinstr",3]],["bool",15]]],[11,"le","","",27,[[["callindirectinstr",3]],["bool",15]]],[11,"gt","","",27,[[["callindirectinstr",3]],["bool",15]]],[11,"ge","","",27,[[["callindirectinstr",3]],["bool",15]]],[11,"partial_cmp","","",28,[[["constinstr",3]],[["option",4],["ordering",4]]]],[11,"lt","","",28,[[["constinstr",3]],["bool",15]]],[11,"le","","",28,[[["constinstr",3]],["bool",15]]],[11,"gt","","",28,[[["constinstr",3]],["bool",15]]],[11,"ge","","",28,[[["constinstr",3]],["bool",15]]],[11,"partial_cmp","","",29,[[["reinterpretinstr",3]],[["option",4],["ordering",4]]]],[11,"lt","","",29,[[["reinterpretinstr",3]],["bool",15]]],[11,"le","","",29,[[["reinterpretinstr",3]],["bool",15]]],[11,"gt","","",29,[[["reinterpretinstr",3]],["bool",15]]],[11,"ge","","",29,[[["reinterpretinstr",3]],["bool",15]]],[11,"partial_cmp","runwell_ir::instr::operands","",8,[[["binaryfloatop",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","runwell_ir::instr","",30,[[["binaryfloatinstr",3]],[["option",4],["ordering",4]]]],[11,"lt","","",30,[[["binaryfloatinstr",3]],["bool",15]]],[11,"le","","",30,[[["binaryfloatinstr",3]],["bool",15]]],[11,"gt","","",30,[[["binaryfloatinstr",3]],["bool",15]]],[11,"ge","","",30,[[["binaryfloatinstr",3]],["bool",15]]],[11,"partial_cmp","runwell_ir::instr::operands","",10,[[["comparefloatop",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","runwell_ir::instr","",31,[[["comparefloatinstr",3]],[["option",4],["ordering",4]]]],[11,"lt","","",31,[[["comparefloatinstr",3]],["bool",15]]],[11,"le","","",31,[[["comparefloatinstr",3]],["bool",15]]],[11,"gt","","",31,[[["comparefloatinstr",3]],["bool",15]]],[11,"ge","","",31,[[["comparefloatinstr",3]],["bool",15]]],[11,"partial_cmp","","",32,[[["demotefloatinstr",3]],[["option",4],["ordering",4]]]],[11,"lt","","",32,[[["demotefloatinstr",3]],["bool",15]]],[11,"le","","",32,[[["demotefloatinstr",3]],["bool",15]]],[11,"gt","","",32,[[["demotefloatinstr",3]],["bool",15]]],[11,"ge","","",32,[[["demotefloatinstr",3]],["bool",15]]],[11,"partial_cmp","","",33,[[["promotefloatinstr",3]],[["option",4],["ordering",4]]]],[11,"lt","","",33,[[["promotefloatinstr",3]],["bool",15]]],[11,"le","","",33,[[["promotefloatinstr",3]],["bool",15]]],[11,"gt","","",33,[[["promotefloatinstr",3]],["bool",15]]],[11,"ge","","",33,[[["promotefloatinstr",3]],["bool",15]]],[11,"partial_cmp","","",34,[[["floattointinstr",3]],[["option",4],["ordering",4]]]],[11,"lt","","",34,[[["floattointinstr",3]],["bool",15]]],[11,"le","","",34,[[["floattointinstr",3]],["bool",15]]],[11,"gt","","",34,[[["floattointinstr",3]],["bool",15]]],[11,"ge","","",34,[[["floattointinstr",3]],["bool",15]]],[11,"partial_cmp","runwell_ir::instr::operands","",13,[[["unaryfloatop",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","runwell_ir::instr","",35,[[["unaryfloatinstr",3]],[["option",4],["ordering",4]]]],[11,"lt","","",35,[[["unaryfloatinstr",3]],["bool",15]]],[11,"le","","",35,[[["unaryfloatinstr",3]],["bool",15]]],[11,"gt","","",35,[[["unaryfloatinstr",3]],["bool",15]]],[11,"ge","","",35,[[["unaryfloatinstr",3]],["bool",15]]],[11,"partial_cmp","","",15,[[["floatinstr",4]],[["option",4],["ordering",4]]]],[11,"lt","","",15,[[["floatinstr",4]],["bool",15]]],[11,"le","","",15,[[["floatinstr",4]],["bool",15]]],[11,"gt","","",15,[[["floatinstr",4]],["bool",15]]],[11,"ge","","",15,[[["floatinstr",4]],["bool",15]]],[11,"partial_cmp","","",36,[[["binaryintinstr",3]],[["option",4],["ordering",4]]]],[11,"lt","","",36,[[["binaryintinstr",3]],["bool",15]]],[11,"le","","",36,[[["binaryintinstr",3]],["bool",15]]],[11,"gt","","",36,[[["binaryintinstr",3]],["bool",15]]],[11,"ge","","",36,[[["binaryintinstr",3]],["bool",15]]],[11,"partial_cmp","runwell_ir::instr::operands","",9,[[["binaryintop",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",11,[[["compareintop",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","runwell_ir::instr","",37,[[["compareintinstr",3]],[["option",4],["ordering",4]]]],[11,"lt","","",37,[[["compareintinstr",3]],["bool",15]]],[11,"le","","",37,[[["compareintinstr",3]],["bool",15]]],[11,"gt","","",37,[[["compareintinstr",3]],["bool",15]]],[11,"ge","","",37,[[["compareintinstr",3]],["bool",15]]],[11,"partial_cmp","","",38,[[["truncateintinstr",3]],[["option",4],["ordering",4]]]],[11,"lt","","",38,[[["truncateintinstr",3]],["bool",15]]],[11,"le","","",38,[[["truncateintinstr",3]],["bool",15]]],[11,"gt","","",38,[[["truncateintinstr",3]],["bool",15]]],[11,"ge","","",38,[[["truncateintinstr",3]],["bool",15]]],[11,"partial_cmp","","",39,[[["extendintinstr",3]],[["option",4],["ordering",4]]]],[11,"lt","","",39,[[["extendintinstr",3]],["bool",15]]],[11,"le","","",39,[[["extendintinstr",3]],["bool",15]]],[11,"gt","","",39,[[["extendintinstr",3]],["bool",15]]],[11,"ge","","",39,[[["extendintinstr",3]],["bool",15]]],[11,"partial_cmp","","",40,[[["inttofloatinstr",3]],[["option",4],["ordering",4]]]],[11,"lt","","",40,[[["inttofloatinstr",3]],["bool",15]]],[11,"le","","",40,[[["inttofloatinstr",3]],["bool",15]]],[11,"gt","","",40,[[["inttofloatinstr",3]],["bool",15]]],[11,"ge","","",40,[[["inttofloatinstr",3]],["bool",15]]],[11,"partial_cmp","","",41,[[["shiftintinstr",3]],[["option",4],["ordering",4]]]],[11,"lt","","",41,[[["shiftintinstr",3]],["bool",15]]],[11,"le","","",41,[[["shiftintinstr",3]],["bool",15]]],[11,"gt","","",41,[[["shiftintinstr",3]],["bool",15]]],[11,"ge","","",41,[[["shiftintinstr",3]],["bool",15]]],[11,"partial_cmp","runwell_ir::instr::operands","",12,[[["shiftintop",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",14,[[["unaryintop",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","runwell_ir::instr","",42,[[["unaryintinstr",3]],[["option",4],["ordering",4]]]],[11,"lt","","",42,[[["unaryintinstr",3]],["bool",15]]],[11,"le","","",42,[[["unaryintinstr",3]],["bool",15]]],[11,"gt","","",42,[[["unaryintinstr",3]],["bool",15]]],[11,"ge","","",42,[[["unaryintinstr",3]],["bool",15]]],[11,"partial_cmp","","",17,[[["intinstr",4]],[["option",4],["ordering",4]]]],[11,"lt","","",17,[[["intinstr",4]],["bool",15]]],[11,"le","","",17,[[["intinstr",4]],["bool",15]]],[11,"gt","","",17,[[["intinstr",4]],["bool",15]]],[11,"ge","","",17,[[["intinstr",4]],["bool",15]]],[11,"partial_cmp","runwell_ir","",43,[[["immu32",3]],[["option",4],["ordering",4]]]],[11,"lt","","",43,[[["immu32",3]],["bool",15]]],[11,"le","","",43,[[["immu32",3]],["bool",15]]],[11,"gt","","",43,[[["immu32",3]],["bool",15]]],[11,"ge","","",43,[[["immu32",3]],["bool",15]]],[11,"partial_cmp","runwell_ir::instr","",44,[[["heapaddrinstr",3]],[["option",4],["ordering",4]]]],[11,"lt","","",44,[[["heapaddrinstr",3]],["bool",15]]],[11,"le","","",44,[[["heapaddrinstr",3]],["bool",15]]],[11,"gt","","",44,[[["heapaddrinstr",3]],["bool",15]]],[11,"ge","","",44,[[["heapaddrinstr",3]],["bool",15]]],[11,"partial_cmp","","",45,[[["loadinstr",3]],[["option",4],["ordering",4]]]],[11,"lt","","",45,[[["loadinstr",3]],["bool",15]]],[11,"le","","",45,[[["loadinstr",3]],["bool",15]]],[11,"gt","","",45,[[["loadinstr",3]],["bool",15]]],[11,"ge","","",45,[[["loadinstr",3]],["bool",15]]],[11,"partial_cmp","","",46,[[["storeinstr",3]],[["option",4],["ordering",4]]]],[11,"lt","","",46,[[["storeinstr",3]],["bool",15]]],[11,"le","","",46,[[["storeinstr",3]],["bool",15]]],[11,"gt","","",46,[[["storeinstr",3]],["bool",15]]],[11,"ge","","",46,[[["storeinstr",3]],["bool",15]]],[11,"partial_cmp","","",47,[[["memorygrowinstr",3]],[["option",4],["ordering",4]]]],[11,"lt","","",47,[[["memorygrowinstr",3]],["bool",15]]],[11,"le","","",47,[[["memorygrowinstr",3]],["bool",15]]],[11,"gt","","",47,[[["memorygrowinstr",3]],["bool",15]]],[11,"ge","","",47,[[["memorygrowinstr",3]],["bool",15]]],[11,"partial_cmp","","",48,[[["memorysizeinstr",3]],[["option",4],["ordering",4]]]],[11,"lt","","",48,[[["memorysizeinstr",3]],["bool",15]]],[11,"le","","",48,[[["memorysizeinstr",3]],["bool",15]]],[11,"gt","","",48,[[["memorysizeinstr",3]],["bool",15]]],[11,"ge","","",48,[[["memorysizeinstr",3]],["bool",15]]],[11,"partial_cmp","","",49,[[["matchselectinstr",3]],[["option",4],["ordering",4]]]],[11,"lt","","",49,[[["matchselectinstr",3]],["bool",15]]],[11,"le","","",49,[[["matchselectinstr",3]],["bool",15]]],[11,"gt","","",49,[[["matchselectinstr",3]],["bool",15]]],[11,"ge","","",49,[[["matchselectinstr",3]],["bool",15]]],[11,"partial_cmp","","",18,[[["terminalinstr",4]],[["option",4],["ordering",4]]]],[11,"lt","","",18,[[["terminalinstr",4]],["bool",15]]],[11,"le","","",18,[[["terminalinstr",4]],["bool",15]]],[11,"gt","","",18,[[["terminalinstr",4]],["bool",15]]],[11,"ge","","",18,[[["terminalinstr",4]],["bool",15]]],[11,"partial_cmp","","",52,[[["returninstr",3]],[["option",4],["ordering",4]]]],[11,"lt","","",52,[[["returninstr",3]],["bool",15]]],[11,"le","","",52,[[["returninstr",3]],["bool",15]]],[11,"gt","","",52,[[["returninstr",3]],["bool",15]]],[11,"ge","","",52,[[["returninstr",3]],["bool",15]]],[11,"partial_cmp","","",53,[[["branchinstr",3]],[["option",4],["ordering",4]]]],[11,"lt","","",53,[[["branchinstr",3]],["bool",15]]],[11,"le","","",53,[[["branchinstr",3]],["bool",15]]],[11,"gt","","",53,[[["branchinstr",3]],["bool",15]]],[11,"ge","","",53,[[["branchinstr",3]],["bool",15]]],[11,"partial_cmp","","",54,[[["tailcallinstr",3]],[["option",4],["ordering",4]]]],[11,"lt","","",54,[[["tailcallinstr",3]],["bool",15]]],[11,"le","","",54,[[["tailcallinstr",3]],["bool",15]]],[11,"gt","","",54,[[["tailcallinstr",3]],["bool",15]]],[11,"ge","","",54,[[["tailcallinstr",3]],["bool",15]]],[11,"partial_cmp","","",55,[[["tailcallindirectinstr",3]],[["option",4],["ordering",4]]]],[11,"lt","","",55,[[["tailcallindirectinstr",3]],["bool",15]]],[11,"le","","",55,[[["tailcallindirectinstr",3]],["bool",15]]],[11,"gt","","",55,[[["tailcallindirectinstr",3]],["bool",15]]],[11,"ge","","",55,[[["tailcallindirectinstr",3]],["bool",15]]],[11,"partial_cmp","","",56,[[["matchbranchinstr",3]],[["option",4],["ordering",4]]]],[11,"lt","","",56,[[["matchbranchinstr",3]],["bool",15]]],[11,"le","","",56,[[["matchbranchinstr",3]],["bool",15]]],[11,"gt","","",56,[[["matchbranchinstr",3]],["bool",15]]],[11,"ge","","",56,[[["matchbranchinstr",3]],["bool",15]]],[11,"partial_cmp","runwell_ir::primitive","",0,[[["type",4]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["type",4]],["bool",15]]],[11,"le","","",0,[[["type",4]],["bool",15]]],[11,"gt","","",0,[[["type",4]],["bool",15]]],[11,"ge","","",0,[[["type",4]],["bool",15]]],[11,"partial_cmp","","",1,[[["inttype",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",2,[[["floattype",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",3,[[["const",4]],[["option",4],["ordering",4]]]],[11,"lt","","",3,[[["const",4]],["bool",15]]],[11,"le","","",3,[[["const",4]],["bool",15]]],[11,"gt","","",3,[[["const",4]],["bool",15]]],[11,"ge","","",3,[[["const",4]],["bool",15]]],[11,"partial_cmp","","",4,[[["intconst",4]],[["option",4],["ordering",4]]]],[11,"lt","","",4,[[["intconst",4]],["bool",15]]],[11,"le","","",4,[[["intconst",4]],["bool",15]]],[11,"gt","","",4,[[["intconst",4]],["bool",15]]],[11,"ge","","",4,[[["intconst",4]],["bool",15]]],[11,"partial_cmp","","",5,[[["floatconst",4]],[["option",4],["ordering",4]]]],[11,"lt","","",5,[[["floatconst",4]],["bool",15]]],[11,"le","","",5,[[["floatconst",4]],["bool",15]]],[11,"gt","","",5,[[["floatconst",4]],["bool",15]]],[11,"ge","","",5,[[["floatconst",4]],["bool",15]]],[11,"partial_cmp","","",6,[[["f32",3]],[["option",4],["ordering",4]]]],[11,"lt","","",6,[[["f32",3]],["bool",15]]],[11,"le","","",6,[[["f32",3]],["bool",15]]],[11,"gt","","",6,[[["f32",3]],["bool",15]]],[11,"ge","","",6,[[["f32",3]],["bool",15]]],[11,"partial_cmp","","",7,[[["f64",3]],[["option",4],["ordering",4]]]],[11,"lt","","",7,[[["f64",3]],["bool",15]]],[11,"le","","",7,[[["f64",3]],["bool",15]]],[11,"gt","","",7,[[["f64",3]],["bool",15]]],[11,"ge","","",7,[[["f64",3]],["bool",15]]],[11,"fmt","runwell_ir","",25,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_ir::instr","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_ir::instr::operands","",8,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_ir::instr","",30,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_ir::instr::operands","",10,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_ir::instr","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_ir::instr::operands","",13,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_ir::instr","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_ir::instr::operands","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_ir::instr","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_ir::instr::operands","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_ir::instr","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_ir","",43,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_ir::instr","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_ir::instr::utils","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_ir::instr","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_ir::instr::utils","",57,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_ir::instr","",16,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_ir::primitive","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_ir","",25,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_ir::instr","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_ir::instr::operands","",8,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_ir::instr","",30,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_ir::instr::operands","",10,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_ir::instr","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_ir::instr::operands","",13,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_ir::instr","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_ir::instr::operands","",9,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_ir::instr","",36,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_ir::instr::operands","",11,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_ir::instr","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_ir::instr::operands","",12,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_ir::instr","",41,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_ir::instr::operands","",14,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_ir::instr","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_ir","",43,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_ir::instr","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_ir::primitive","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"add","runwell_ir","",25,[[]]],[11,"hash","runwell_ir::instr","",26,[[]]],[11,"hash","","",27,[[]]],[11,"hash","","",28,[[]]],[11,"hash","","",29,[[]]],[11,"hash","runwell_ir::instr::operands","",8,[[]]],[11,"hash","runwell_ir::instr","",30,[[]]],[11,"hash","runwell_ir::instr::operands","",10,[[]]],[11,"hash","runwell_ir::instr","",31,[[]]],[11,"hash","","",32,[[]]],[11,"hash","","",33,[[]]],[11,"hash","","",34,[[]]],[11,"hash","runwell_ir::instr::operands","",13,[[]]],[11,"hash","runwell_ir::instr","",35,[[]]],[11,"hash","","",15,[[]]],[11,"hash","","",36,[[]]],[11,"hash","runwell_ir::instr::operands","",9,[[]]],[11,"hash","","",11,[[]]],[11,"hash","runwell_ir::instr","",37,[[]]],[11,"hash","","",38,[[]]],[11,"hash","","",39,[[]]],[11,"hash","","",40,[[]]],[11,"hash","","",41,[[]]],[11,"hash","runwell_ir::instr::operands","",12,[[]]],[11,"hash","","",14,[[]]],[11,"hash","runwell_ir::instr","",42,[[]]],[11,"hash","","",17,[[]]],[11,"hash","runwell_ir","",43,[[]]],[11,"hash","runwell_ir::instr","",44,[[]]],[11,"hash","","",45,[[]]],[11,"hash","","",46,[[]]],[11,"hash","","",47,[[]]],[11,"hash","","",48,[[]]],[11,"hash","","",49,[[]]],[11,"hash","","",18,[[]]],[11,"hash","","",52,[[]]],[11,"hash","","",53,[[]]],[11,"hash","","",54,[[]]],[11,"hash","","",55,[[]]],[11,"hash","","",56,[[]]],[11,"hash","","",16,[[]]],[11,"hash","runwell_ir::primitive","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",5,[[]]],[11,"hash","","",6,[[]]],[11,"hash","","",7,[[]]],[11,"fmt","runwell_ir::instr","",16,[[["formatter",3],["idx",3]],["result",6]]],[11,"fmt","runwell_ir::primitive","",58,[[["edge",6],["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3],["func",6]],["result",6]]],[11,"fmt","","",60,[[["formatter",3],["functype",6]],["result",6]]],[11,"fmt","","",61,[[["formatter",3],["mem",6]],["result",6]]],[11,"fmt","","",62,[[["formatter",3],["table",6]],["result",6]]],[11,"fmt","","",63,[[["block",6],["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3],["value",6]],["result",6]]],[11,"single","runwell_ir","Creates a single indentation.",25,[[]]],[11,"new","runwell_ir::instr","Creates a new call instruction to call the indexed …",26,[[["func",6]]]],[11,"func","","Returns the called function index.",26,[[],["func",6]]],[11,"params","","Returns the function call parameters.",26,[[]]],[11,"new","","Creates a new call instruction to call the indexed …",27,[[["functype",6],["value",6],["table",6]]]],[11,"table","","Returns the table for the indirect function call.",27,[[],["table",6]]],[11,"index","","Returns the table index for the indirect call.",27,[[],["value",6]]],[11,"func_type","","Returns the expected function type of the indirectly …",27,[[],["functype",6]]],[11,"params","","Returns the SSA function input values for the indirect …",27,[[]]],[11,"new","","Creates a new constant instruction.",28,[[["const",4]]]],[11,"i32","","Creates a new <code>i32</code> constant instruction.",28,[[["i32",15]]]],[11,"i64","","Creates a new <code>i64</code> constant instruction.",28,[[["i64",15]]]],[11,"f32","","Creates a new <code>f32</code> constant instruction.",28,[[["f32",3]]]],[11,"f64","","Creates a new <code>f64</code> constant instruction.",28,[[["f64",3]]]],[11,"ty","","Returns the type of the constant value of the constant …",28,[[],["type",4]]],[11,"const_value","","Returns the constant value of the constant instruction.",28,[[],["const",4]]],[11,"new","","Creates a new reinterpret instruction.",29,[[["value",6],["type",4]]]],[11,"src_type","","Returns the source type of the reinterpret instruction.",29,[[],["type",4]]],[11,"dst_type","","Returns the destination type of the reinterpret …",29,[[],["type",4]]],[11,"src","","Returns the source value of the reinterpret instruction.",29,[[],["value",6]]],[11,"new","","Creates a new binary floating point number instruction.",30,[[["binaryfloatop",4],["value",6],["floattype",4]]]],[11,"op","","Returns the floating point comparison operand of the …",30,[[],["binaryfloatop",4]]],[11,"lhs","","Returns the left-hand side value of the compare …",30,[[],["value",6]]],[11,"rhs","","Returns the right-hand side value of the compare …",30,[[],["value",6]]],[11,"ty","","Returns the type of the compare instruction.",30,[[],["floattype",4]]],[11,"new","","Creates a new comparison instruction for floating point …",31,[[["comparefloatop",4],["value",6],["floattype",4]]]],[11,"op","","Returns the floating point comparison operand of the …",31,[[],["comparefloatop",4]]],[11,"lhs","","Returns the left-hand side value of the compare …",31,[[],["value",6]]],[11,"rhs","","Returns the right-hand side value of the compare …",31,[[],["value",6]]],[11,"ty","","Returns the type of the compare instruction.",31,[[],["floattype",4]]],[11,"new","","Creates a new float demote instruction.",32,[[["value",6],["floattype",4]]]],[11,"src_type","","Returns the source floating point number type before …",32,[[],["floattype",4]]],[11,"dst_type","","Returns the target floating point number type after …",32,[[],["floattype",4]]],[11,"src","","Returns the source floating point value of the demotion.",32,[[],["value",6]]],[11,"new","","Creates a new float promote instruction.",33,[[["value",6],["floattype",4]]]],[11,"src_type","","Returns the source floating point number type before …",33,[[],["floattype",4]]],[11,"dst_type","","Returns the target floating point number type after …",33,[[],["floattype",4]]],[11,"src","","Returns the source floating point value of the promotion.",33,[[],["value",6]]],[11,"new","","Creates a new instruction converts from float to signed …",34,[[["inttype",4],["bool",15],["value",6],["floattype",4]]]],[11,"src_type","","Returns the source floating point number type before …",34,[[],["floattype",4]]],[11,"dst_type","","Returns the destination integer type after conversion.",34,[[],["inttype",4]]],[11,"src","","Returns the source floating point value of the conversion.",34,[[],["value",6]]],[11,"is_signed","","Returns <code>true</code> if the resulting integer is interpreted as …",34,[[],["bool",15]]],[11,"is_saturating","","Returns <code>true</code> if the conversion is saturating.",34,[[],["bool",15]]],[11,"new","","Creates a new unary integer instruction of the given type …",35,[[["value",6],["unaryfloatop",4],["floattype",4]]]],[11,"op","","Returns the unary floating point number operand of the …",35,[[],["unaryfloatop",4]]],[11,"ty","","Returns the integer type of the return value.",35,[[],["floattype",4]]],[11,"src","","Returns the source value of the instruction.",35,[[],["value",6]]],[11,"new","","Creates a new binary integer instruction.",36,[[["inttype",4],["binaryintop",4],["value",6]]]],[11,"op","","Returns the binary operand of the instruction.",36,[[],["binaryintop",4]]],[11,"lhs","","Returns the left-hand side value.",36,[[],["value",6]]],[11,"rhs","","Returns the right-hand side value.",36,[[],["value",6]]],[11,"ty","","Returns the integer type of the instruction.",36,[[],["inttype",4]]],[11,"new","","Creates a new integer comparison instruction.",37,[[["inttype",4],["compareintop",4],["value",6]]]],[11,"op","","Returns the compare operand of the instruction.",37,[[],["compareintop",4]]],[11,"lhs","","Returns the left-hand side value.",37,[[],["value",6]]],[11,"rhs","","Returns the right-hand side value.",37,[[],["value",6]]],[11,"ty","","Returns the integer type of the instruction.",37,[[],["inttype",4]]],[11,"new","","Creates a new truncation instruction truncating <code>src</code> from …",38,[[["inttype",4],["value",6]]]],[11,"src_type","","Returns the source type of the truncate instruction.",38,[[],["inttype",4]]],[11,"dst_type","","Returns the destination type of the truncate instruction.",38,[[],["inttype",4]]],[11,"src","","Returns the source of the instruction that is to be …",38,[[],["value",6]]],[11,"new","","Creates a new extension instruction extending <code>src</code> from …",39,[[["bool",15],["inttype",4],["value",6]]]],[11,"zext","","Creates a new zero-extend instruction extending <code>src</code> from …",39,[[["inttype",4],["value",6]]]],[11,"sext","","Creates a new sign-extend instruction extending <code>src</code> from …",39,[[["inttype",4],["value",6]]]],[11,"src_type","","Returns the source type of the truncate instruction.",39,[[],["inttype",4]]],[11,"dst_type","","Returns the destination type of the truncate instruction.",39,[[],["inttype",4]]],[11,"src","","Returns the source of the instruction that is to be …",39,[[],["value",6]]],[11,"is_signed","","Returns <code>true</code> if the source is treated as a signed integer.",39,[[],["bool",15]]],[11,"new","","Creates a new instruction that converts from an integer …",40,[[["inttype",4],["bool",15],["value",6],["floattype",4]]]],[11,"src_type","","Returns the source type of the truncate instruction.",40,[[],["inttype",4]]],[11,"dst_type","","Returns the destination type of the truncate instruction.",40,[[],["floattype",4]]],[11,"src","","Returns the source of the instruction that is to be …",40,[[],["value",6]]],[11,"is_signed","","Returns <code>true</code> if the source is treated as a signed integer.",40,[[],["bool",15]]],[11,"new","","Creates a new shift or rotate integer instruction.",41,[[["inttype",4],["shiftintop",4],["value",6]]]],[11,"op","","Returns the shift operand of the instruction.",41,[[],["shiftintop",4]]],[11,"source","","Returns the left-hand side value.",41,[[],["value",6]]],[11,"shift_amount","","Returns the right-hand side value.",41,[[],["value",6]]],[11,"ty","","Returns the integer type of the instruction.",41,[[],["inttype",4]]],[11,"new","","Creates a new unary integer instruction of the given type …",42,[[["unaryintop",4],["inttype",4],["value",6]]]],[11,"op","","Returns the unary operand of the instruction.",42,[[],["unaryintop",4]]],[11,"ty","","Returns the integer type of the return value.",42,[[],["inttype",4]]],[11,"src","","Returns the source value of the instruction.",42,[[],["value",6]]],[11,"new","","Creates a new heap addressing instruction.",44,[[["immu32",3],["mem",6],["value",6]]]],[11,"heap","","Returns index of the heap to index into.",44,[[],["mem",6]]],[11,"ptr","","Returns the pointer where to index into the linear memory.",44,[[],["value",6]]],[11,"size","","Returns the size of the area to allow indexing into the …",44,[[],["immu32",3]]],[11,"new","","Creates a new load instruction.",45,[[["immu32",3],["value",6],["type",4]]]],[11,"address","","Returns the address where to store the value in linear …",45,[[],["value",6]]],[11,"offset","","Returns the address offset of the store instruction.",45,[[],["immu32",3]]],[11,"ty","","Returns the type of the value that is stored in linear …",45,[[],["type",4]]],[11,"new","","Creates a new store instruction.",46,[[["immu32",3],["value",6],["type",4]]]],[11,"address","","Returns the address where to store the value in linear …",46,[[],["value",6]]],[11,"offset","","Returns the address offset of the store instruction.",46,[[],["immu32",3]]],[11,"value","","Returns the value that is to be stored in linear memory.",46,[[],["value",6]]],[11,"ty","","Returns the type of the value that is stored in linear …",46,[[],["type",4]]],[11,"new","","Creates a new memory grow instruction to grow the indexed …",47,[[["mem",6],["value",6]]]],[11,"new","","Creates a new memory size instruction to return the size …",48,[[["mem",6]]]],[11,"push_results","runwell_ir::instr::utils","Pushes another results tuple match arm to the constructed …",50,[[]]],[11,"finish","","Pushes the default results tuple to the constructed …",50,[[],["matchselectinstr",3]]],[11,"last_pushed_values","","Returns the values that have been pushed latest as match …",50,[[]]],[11,"result_types","","Returns the shared type of all result values.",50,[[]]],[11,"new_multi","runwell_ir::instr","Creates a new select operation returning one value tuple …",49,[[["inttype",4],["value",6]],["matchselectinstrbuilder",3]]],[11,"new","","Creates a new select operation returning a single value …",49,[[["inttype",4],["value",6],["type",4]]]],[11,"selector_type","","Returns the type of the selector.",49,[[],["inttype",4]]],[11,"result_types","","Returns the shared type of all result values.",49,[[]]],[11,"selector","","Returns the value of the selector.",49,[[],["value",6]]],[11,"default_results","","Returns the value of the default result.",49,[[]]],[11,"target_results","","Returns a slice over the target results associated to the …",49,[[["usize",15]],["option",4]]],[11,"iter_results","","Returns an iterator over the result values of all match …",49,[[],["matchselectresultsiter",3]]],[11,"new","","Creates a new return instruction returning the given …",52,[[]]],[11,"return_values","","Returns the value that is returned by the instruction.",52,[[]]],[11,"new","","Creates a new unconditional branch instruction using the …",53,[[["edge",6]]]],[11,"edge","","Returns the branching edge of the unconditional branch.",53,[[],["edge",6]]],[11,"new","","Creates a new tail call instruction to call the indexed …",54,[[["func",6]]]],[11,"func","","Returns the called function index.",54,[[],["func",6]]],[11,"params","","Returns the function call parameters.",54,[[]]],[11,"new","","Creates a new call instruction to call the indexed …",55,[[["functype",6],["value",6],["table",6]]]],[11,"table","","Returns the table for the indirect function call.",55,[[],["table",6]]],[11,"index","","Returns the table index for the indirect call.",55,[[],["value",6]]],[11,"func_type","","Returns the expected function type of the indirectly …",55,[[],["functype",6]]],[11,"params","","Returns the SSA function input values for the indirect …",55,[[]]],[11,"push_edge","runwell_ir::instr::utils","Pushes another edge to the <code>MatchBranchInstr</code> under …",57,[[["edge",6]]]],[11,"finish","","Finishes construction of the <code>MatchBranchInstr</code>.",57,[[["edge",6]],["matchbranchinstr",3]]],[11,"build","runwell_ir::instr","Creates a new <code>MatchBranchInstr</code> builder.",56,[[["inttype",4],["value",6]],["matchbranchinstrbuilder",3]]],[11,"new","","Creates a new branching table with the given case, …",56,[[["edge",6],["inttype",4],["value",6]]]],[11,"selector","","Returns the selector value determining where to jump to.",56,[[],["value",6]]],[11,"selector_type","","Returns the integer type of the selector value.",56,[[],["inttype",4]]],[11,"target_edges","","Returns a slice over all target jumps.",56,[[]]],[11,"default_target","","Returns the default target to jump to.",56,[[],["edge",6]]],[11,"is_terminal","","Returns <code>true</code> if the instruction terminates a basic block.",16,[[],["bool",15]]]],"p":[[4,"Type"],[4,"IntType"],[4,"FloatType"],[4,"Const"],[4,"IntConst"],[4,"FloatConst"],[3,"F32"],[3,"F64"],[4,"BinaryFloatOp"],[4,"BinaryIntOp"],[4,"CompareFloatOp"],[4,"CompareIntOp"],[4,"ShiftIntOp"],[4,"UnaryFloatOp"],[4,"UnaryIntOp"],[4,"FloatInstr"],[4,"Instruction"],[4,"IntInstr"],[4,"TerminalInstr"],[8,"DisplayEdge"],[8,"DisplayInstruction"],[8,"VisitEdges"],[8,"VisitEdgesMut"],[8,"VisitValues"],[8,"VisitValuesMut"],[3,"Indent"],[3,"CallInstr"],[3,"CallIndirectInstr"],[3,"ConstInstr"],[3,"ReinterpretInstr"],[3,"BinaryFloatInstr"],[3,"CompareFloatInstr"],[3,"DemoteFloatInstr"],[3,"PromoteFloatInstr"],[3,"FloatToIntInstr"],[3,"UnaryFloatInstr"],[3,"BinaryIntInstr"],[3,"CompareIntInstr"],[3,"TruncateIntInstr"],[3,"ExtendIntInstr"],[3,"IntToFloatInstr"],[3,"ShiftIntInstr"],[3,"UnaryIntInstr"],[3,"ImmU32"],[3,"HeapAddrInstr"],[3,"LoadInstr"],[3,"StoreInstr"],[3,"MemoryGrowInstr"],[3,"MemorySizeInstr"],[3,"MatchSelectInstr"],[3,"MatchSelectInstrBuilder"],[3,"MatchSelectResultsIter"],[3,"ReturnInstr"],[3,"BranchInstr"],[3,"TailCallInstr"],[3,"TailCallIndirectInstr"],[3,"MatchBranchInstr"],[3,"MatchBranchInstrBuilder"],[4,"EdgeEntity"],[3,"FunctionEntity"],[3,"FuncTypeEntity"],[3,"LinearMemoryEntity"],[3,"TableEntity"],[3,"BlockEntity"],[3,"ValueEntity"]]},\
"runwell_module":{"doc":"","i":[[0,"builder","runwell_module","Module section builder types.",null,null],[3,"FunctionBuilder","runwell_module::builder","Incrementally guides the construction process to build a …",null,null],[3,"InstructionBuilder","","Builder guiding the construction of Runwell IR …",null,null],[3,"MatchBranchBuilder","","Builder used in order to construct <code>MatchBranchInstr</code> …",null,null],[3,"MatchSelectInstructionBuilder","","Builder to construct a match select instruction returning …",null,null],[3,"FunctionTypeBuilder","","Used to incrementally construct function type instances.",null,null],[3,"ModuleBuilder","","A module builder to incrementally build up a Runwell …",null,null],[3,"ModuleExportsBuilder","","Constructs module exports.",null,null],[3,"ModuleFunctionBodiesBuilder","","Constructs module function bodies.",null,null],[3,"ModuleFunctionsBuilder","","Constructs module function declarations for internally …",null,null],[3,"ModuleGlobalsBuilder","","Constructs internal module global variables.",null,null],[3,"ModuleImportsBuilder","","Constructs module imports.",null,null],[3,"ModuleMemoriesBuilder","","Constructs module memory declarations for internally …",null,null],[3,"ModuleMemoryDataBuilder","","Constructs module linear memory initializers.",null,null],[3,"ModuleTableElementsBuilder","","Constructs module table initializers.",null,null],[3,"ModuleTablesBuilder","","Constructs module table declarations for internally …",null,null],[3,"ModuleTypesBuilder","","Constructs module function types.",null,null],[0,"primitive","runwell_module","Primitive Wasm types that implement conversion to Runwell …",null,null],[6,"Instr","runwell_module::primitive","The unique index of a basic block entity of the Runwell …",null,null],[6,"Variable","","The unique index of a basic block entity of the Runwell …",null,null],[3,"FunctionType","","A function type.",null,null],[6,"Global","","The unique index of a global variable.",null,null],[3,"GlobalVariable","","A global variable declaration.",null,null],[3,"GlobalVariableEntity","","A global variable entity.",null,null],[3,"ImportName","","A module and field name for an imported entity.",null,null],[4,"InitExpr","","An initializer expression.",null,null],[13,"Const","","Resolves at instantiation-time to the constant value.",0,null],[13,"GlobalGet","","Resolves at instantiation-time to the value of the global …",0,null],[3,"DataSegmentIter","","Iterator over the initialization segments of the linear …",null,null],[3,"LinearMemoryDecl","","A linear memory declaration.",null,null],[3,"LinearMemoryInit","","The initializer for a linear memory.",null,null],[3,"ElementSegmentIter","","Iterator over the initialization segments of the table …",null,null],[3,"TableDecl","","A table declaration.",null,null],[3,"TableInit","","The initializer for a table.",null,null],[3,"Error","runwell_module","An error that occurred while translating from Wasm to …",null,null],[4,"ErrorKind","","An error kind that occurred while translating from Wasm …",null,null],[13,"FunctionBuilder","","",1,null],[3,"FunctionBody","","A virtual, verified Runwell IR function.",null,null],[4,"FunctionBuilderError","","Errors that might occur upon building up a Runwell IR …",null,null],[13,"InvalidPromotion","","",2,null],[12,"from_type","runwell_module::FunctionBuilderError","",3,null],[12,"to_type","","",3,null],[13,"InvalidExtension","runwell_module","",2,null],[12,"from_type","runwell_module::FunctionBuilderError","",4,null],[12,"to_type","","",4,null],[13,"InvalidDemotion","runwell_module","",2,null],[12,"from_type","runwell_module::FunctionBuilderError","",5,null],[12,"to_type","","",5,null],[13,"InvalidTruncation","runwell_module","",2,null],[12,"from_type","runwell_module::FunctionBuilderError","",6,null],[12,"to_type","","",6,null],[13,"IncorrectOrder","runwell_module","",2,null],[12,"last_state","runwell_module::FunctionBuilderError","",7,null],[12,"fail_state","","",7,null],[13,"UnmatchingReinterpretBitwidths","runwell_module","",2,null],[12,"from_bitwidth","runwell_module::FunctionBuilderError","",8,null],[12,"to_bitwidth","","",8,null],[12,"src","","",8,null],[13,"PredecessorForSealedBlock","runwell_module","",2,null],[12,"sealed_block","runwell_module::FunctionBuilderError","",9,null],[12,"new_pred","","",9,null],[13,"UnfilledPredecessor","runwell_module","",2,null],[12,"unfilled_pred","runwell_module::FunctionBuilderError","",10,null],[12,"block","","",10,null],[13,"NoCurrentBasicBlock","runwell_module","",2,null],[13,"MissingBasicBlock","","",2,null],[12,"block","runwell_module::FunctionBuilderError","",11,null],[13,"BasicBlockIsAlreadySealed","runwell_module","",2,null],[12,"block","runwell_module::FunctionBuilderError","",12,null],[13,"BasicBlockIsAlreadyFilled","runwell_module","",2,null],[12,"block","runwell_module::FunctionBuilderError","",13,null],[13,"TooManyVariableDeclarations","runwell_module","",2,null],[13,"MissingDeclarationForVariable","","",2,null],[12,"variable","runwell_module::FunctionBuilderError","",14,null],[12,"access","","",14,null],[13,"UnmatchingVariableType","runwell_module","",2,null],[12,"variable","runwell_module::FunctionBuilderError","",15,null],[12,"value","","",15,null],[12,"declared_type","","",15,null],[12,"value_type","","",15,null],[13,"UnmatchingValueType","runwell_module","",2,null],[12,"value","runwell_module::FunctionBuilderError","",16,null],[12,"value_type","","",16,null],[12,"expected_type","","",16,null],[13,"ReadBeforeWriteVariable","runwell_module","",2,null],[12,"variable","runwell_module::FunctionBuilderError","",17,null],[13,"UnsealedBlocksUponFinalize","runwell_module","",2,null],[12,"unsealed","runwell_module::FunctionBuilderError","",18,null],[13,"UnfilledBlocksUponFinalize","runwell_module","",2,null],[12,"unfilled","runwell_module::FunctionBuilderError","",19,null],[13,"BranchAlreadyExists","runwell_module","",2,null],[12,"from","runwell_module::FunctionBuilderError","",20,null],[12,"to","","",20,null],[13,"InvalidBasicBlock","runwell_module","",2,null],[12,"block","runwell_module::FunctionBuilderError","",21,null],[13,"UnreachablePhi","runwell_module","",2,null],[12,"value","runwell_module::FunctionBuilderError","",22,null],[13,"UnmatchingFunctionReturnType","runwell_module","",2,null],[12,"returned_types","runwell_module::FunctionBuilderError","",23,null],[12,"expected_types","","",23,null],[13,"UnmatchingBlockParameters","runwell_module","",2,null],[12,"block_a","runwell_module::FunctionBuilderError","",24,null],[12,"block_b","","",24,null],[13,"InvalidInstr","runwell_module","",2,null],[12,"instr","runwell_module::FunctionBuilderError","",25,null],[13,"MissingVariableForReplacement","runwell_module","",2,null],[12,"var","runwell_module::FunctionBuilderError","",26,null],[12,"block","","",26,null],[12,"replace_value","","",26,null],[12,"with_value","","",26,null],[3,"Function","runwell_module","A Runwell function.",null,null],[3,"Module","","A constructed and validated Runwell module.",null,null],[3,"ModuleResources","","Module builder resource to incrementally build up a …",null,null],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_string","","",27,[[],["string",3]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","runwell_module::builder","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","runwell_module","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","runwell_module::builder","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","runwell_module","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_string","","",32,[[],["string",3]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","runwell_module::primitive","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_string","","",33,[[],["string",3]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"get_hash","","",33,[[],["u64",15]]],[11,"from","runwell_module::builder","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","runwell_module","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"to_string","","",35,[[],["string",3]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","runwell_module::primitive","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"into_iter","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","runwell_module::builder","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","runwell_module","",53,[[]]],[11,"into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_string","","",54,[[],["string",3]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","runwell_module::primitive","",55,[[]]],[11,"into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"into_iter","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","runwell_module","",27,[[],["error",3]]],[11,"from","","",27,[[["functionbuildererror",4]]]],[11,"from","","",1,[[["functionbuildererror",4]],["errorkind",4]]],[11,"from","runwell_module::primitive","",33,[[]]],[11,"size_hint","","",41,[[]]],[11,"next","","",41,[[],["option",4]]],[11,"size_hint","","",57,[[]]],[11,"next","","",57,[[],["option",4]]],[11,"clone","runwell_module","",35,[[],["function",3]]],[11,"default","runwell_module::primitive","",33,[[],["functiontype",3]]],[11,"default","","",37,[[],["globalvariableentity",3]]],[11,"default","","",40,[[],["linearmemoryinit",3]]],[11,"default","runwell_module","",53,[[],["moduleresources",3]]],[11,"default","runwell_module::primitive","",56,[[],["tableinit",3]]],[11,"cmp","","",33,[[["functiontype",3]],["ordering",4]]],[11,"eq","runwell_module","",27,[[["error",3]],["bool",15]]],[11,"ne","","",27,[[["error",3]],["bool",15]]],[11,"eq","","",1,[[["errorkind",4]],["bool",15]]],[11,"ne","","",1,[[["errorkind",4]],["bool",15]]],[11,"eq","","",2,[[["functionbuildererror",4]],["bool",15]]],[11,"ne","","",2,[[["functionbuildererror",4]],["bool",15]]],[11,"eq","runwell_module::primitive","",33,[[["functiontype",3]],["bool",15]]],[11,"ne","","",33,[[["functiontype",3]],["bool",15]]],[11,"eq","runwell_module::builder","",34,[[["functiontypebuilder",3]],["bool",15]]],[11,"ne","","",34,[[["functiontypebuilder",3]],["bool",15]]],[11,"eq","runwell_module::primitive","",0,[[["initexpr",4]],["bool",15]]],[11,"ne","","",0,[[["initexpr",4]],["bool",15]]],[11,"partial_cmp","","",33,[[["functiontype",3]],[["option",4],["ordering",4]]]],[11,"lt","","",33,[[["functiontype",3]],["bool",15]]],[11,"le","","",33,[[["functiontype",3]],["bool",15]]],[11,"gt","","",33,[[["functiontype",3]],["bool",15]]],[11,"ge","","",33,[[["functiontype",3]],["bool",15]]],[11,"fmt","runwell_module","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_module::builder","",28,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_module","",2,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_module::builder","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_module","",32,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_module::primitive","",33,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_module::builder","",34,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_module","",35,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_module::primitive","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_module::builder","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_module","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_module::primitive","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_module","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_module::primitive","",33,[[["formatter",3]],["result",6]]],[11,"fmt","runwell_module","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"hash","runwell_module::primitive","",33,[[]]],[11,"source","runwell_module","",1,[[],[["error",8],["option",4]]]],[11,"fmt","runwell_module::primitive","",37,[[["formatter",3],["global",6]],["result",6]]],[11,"display_edge","runwell_module","",32,[[["write",8],["edge",6]],["result",6]]],[11,"with_context","","Adds context information to the current error.",27,[[]]],[11,"kind","","Returns a shared reference to the underlying kind of …",27,[[],["errorkind",4]]],[11,"build","","Creates a function builder to incrementally construct the …",32,[[["func",6],["moduleresources",3]],["functionbuilder",3]]],[11,"initialize_inputs","runwell_module::builder","Initializes the input parameters and their types for the …",28,[[["functionbuildercontext",3]]]],[11,"declare_variables","","Declares all function local variables that the function …",28,[[["u32",15],["type",4]],[["error",3],["result",4]]]],[11,"body","","Start defining the body of the function with its basic …",28,[[],[["error",3],["result",4]]]],[11,"create_block","","Creates a new basic block for the function and returns a …",28,[[],[["error",3],["block",6],["result",4]]]],[11,"current_block","","Returns a reference to the current basic block if any.",28,[[],[["error",3],["block",6],["result",4]]]],[11,"switch_to_block","","Switches the current block to the given basic block.",28,[[["block",6]],[["error",3],["result",4]]]],[11,"seal_block","","Seals the current basic block.",28,[[["block",6]],[["error",3],["result",4]]]],[11,"write_var","","Assigns the value to the variable for the current basic …",28,[[["variable",6],["value",6]],[["error",3],["result",4]]]],[11,"create_block_parameter","","Creates a user provided block parameter with the given …",28,[[["block",6],["type",4]],[["value",6],["error",3],["result",4]]]],[11,"block_parameters","","Returns the block parameters of the given block.",28,[[["block",6]]]],[11,"read_var","","Reads the last assigned value of the variable within the …",28,[[["variable",6]],[["value",6],["error",3],["result",4]]]],[11,"is_param_trivial","","Checks if the incomplete block parameter is trivial.",28,[[["value",6]],[["result",4],["option",4],["error",3]]]],[11,"var_type","","Returns the type of the variable.",28,[[["variable",6]],[["error",3],["result",4],["type",4]]]],[11,"value_type","","Returns the type of the given value.",28,[[["value",6]],["type",4]]],[11,"relink_edge_destination","","Changes the destination of all edges with a destination …",28,[[["instr",6],["block",6]],[["error",3],["result",4]]]],[11,"is_block_reachable","","Returns <code>true</code> if the block is reachable.",28,[[["block",6]],["bool",15]]],[11,"instr_values","","Returns the SSA output values of the instruction if any.",28,[[["instr",6]],[["result",4],["error",3]]]],[11,"ins","","Returns an instruction builder to appends instructions to …",28,[[],[["result",4],["instructionbuilder",3],["error",3]]]],[11,"finalize","","Finalizes construction of the built function.",28,[[],[["error",3],["functionbody",3],["result",4]]]],[11,"call_indirect","","",29,[[["value",6],["functype",6],["table",6]],[["instr",6],["result",4],["error",3]]]],[11,"call","","",29,[[["func",6]],[["instr",6],["result",4],["error",3]]]],[11,"tail_call","","",29,[[["func",6]],[["instr",6],["result",4],["error",3]]]],[11,"constant","","",29,[[],[["value",6],["error",3],["result",4]]]],[11,"iclz","","Integer count leading zeros.",29,[[["value",6],["inttype",4]],[["value",6],["error",3],["result",4]]]],[11,"ictz","","Integer count trailing zeros.",29,[[["value",6],["inttype",4]],[["value",6],["error",3],["result",4]]]],[11,"ipopcnt","","Integer count ones.",29,[[["value",6],["inttype",4]],[["value",6],["error",3],["result",4]]]],[11,"ishl","","Integer left shift.",29,[[["value",6],["inttype",4]],[["value",6],["error",3],["result",4]]]],[11,"iushr","","Integer unsigned right shift.",29,[[["value",6],["inttype",4]],[["value",6],["error",3],["result",4]]]],[11,"isshr","","Integer signed right shift.",29,[[["value",6],["inttype",4]],[["value",6],["error",3],["result",4]]]],[11,"irotl","","Integer rotate left.",29,[[["value",6],["inttype",4]],[["value",6],["error",3],["result",4]]]],[11,"irotr","","Integer rotate right.",29,[[["value",6],["inttype",4]],[["value",6],["error",3],["result",4]]]],[11,"iadd","","Integer addition.",29,[[["value",6],["inttype",4]],[["value",6],["error",3],["result",4]]]],[11,"isub","","Integer subtraction.",29,[[["value",6],["inttype",4]],[["value",6],["error",3],["result",4]]]],[11,"imul","","Integer multiplication.",29,[[["value",6],["inttype",4]],[["value",6],["error",3],["result",4]]]],[11,"sdiv","","Signed integer division.",29,[[["value",6],["inttype",4]],[["value",6],["error",3],["result",4]]]],[11,"udiv","","Unsigned integer division.",29,[[["value",6],["inttype",4]],[["value",6],["error",3],["result",4]]]],[11,"srem","","Signed integer remainder.",29,[[["value",6],["inttype",4]],[["value",6],["error",3],["result",4]]]],[11,"urem","","Unsigned integer remainder.",29,[[["value",6],["inttype",4]],[["value",6],["error",3],["result",4]]]],[11,"iand","","Integer bit-wise AND.",29,[[["value",6],["inttype",4]],[["value",6],["error",3],["result",4]]]],[11,"ior","","Integer bit-wise OR.",29,[[["value",6],["inttype",4]],[["value",6],["error",3],["result",4]]]],[11,"ixor","","Integer bit-wise XOR.",29,[[["value",6],["inttype",4]],[["value",6],["error",3],["result",4]]]],[11,"icmp","","Integer comparison given a comparator.",29,[[["value",6],["inttype",4],["compareintop",4]],[["value",6],["error",3],["result",4]]]],[11,"fabs","","Float absolute value.",29,[[["value",6],["floattype",4]],[["value",6],["error",3],["result",4]]]],[11,"fneg","","Float negate.",29,[[["value",6],["floattype",4]],[["value",6],["error",3],["result",4]]]],[11,"fsqrt","","Float square root.",29,[[["value",6],["floattype",4]],[["value",6],["error",3],["result",4]]]],[11,"fceil","","Float round to ceil.",29,[[["value",6],["floattype",4]],[["value",6],["error",3],["result",4]]]],[11,"ffloor","","Float round to floor.",29,[[["value",6],["floattype",4]],[["value",6],["error",3],["result",4]]]],[11,"ftruncate","","Float round to next smaller integer.",29,[[["value",6],["floattype",4]],[["value",6],["error",3],["result",4]]]],[11,"fnearest","","Float round to the nearest integer.",29,[[["value",6],["floattype",4]],[["value",6],["error",3],["result",4]]]],[11,"fadd","","Float addition.",29,[[["value",6],["floattype",4]],[["value",6],["error",3],["result",4]]]],[11,"fsub","","Float subtraction.",29,[[["value",6],["floattype",4]],[["value",6],["error",3],["result",4]]]],[11,"fmul","","Float multiplication.",29,[[["value",6],["floattype",4]],[["value",6],["error",3],["result",4]]]],[11,"fdiv","","Float division.",29,[[["value",6],["floattype",4]],[["value",6],["error",3],["result",4]]]],[11,"fmin","","Float minimum element.",29,[[["value",6],["floattype",4]],[["value",6],["error",3],["result",4]]]],[11,"fmax","","Float maximum element.",29,[[["value",6],["floattype",4]],[["value",6],["error",3],["result",4]]]],[11,"fcopysign","","Float copy-sign operation.",29,[[["value",6],["floattype",4]],[["value",6],["error",3],["result",4]]]],[11,"fcmp","","Float comparison given a comparator.",29,[[["value",6],["floattype",4],["comparefloatop",4]],[["value",6],["error",3],["result",4]]]],[11,"bool_select","","Selects either <code>if_true</code> or <code>if_false</code> depending on the value …",29,[[["value",6],["type",4]],[["value",6],["error",3],["result",4]]]],[11,"push_results","","Pushes another results tuple match arm to the constructed …",30,[[],[["error",3],["result",4]]]],[11,"with_results","","Pushes another results tuple match arm to the constructed …",30,[[],[["result",4],["error",3]]]],[11,"finish","","Pushes the default results tuple to the constructed …",30,[[],[["instr",6],["result",4],["error",3]]]],[11,"match_select_multi","","Selects from the given target result values or the …",29,[[["value",6],["inttype",4]],[["matchselectinstructionbuilder",3],["result",4],["error",3]]]],[11,"match_select","","Selects from the given target result values or the …",29,[[["value",6],["type",4],["inttype",4]],[["value",6],["error",3],["result",4]]]],[11,"reinterpret","","Reinterprets the source value from its source type into …",29,[[["value",6],["type",4]],[["value",6],["error",3],["result",4]]]],[11,"iextend","","Extends the source integer to the destination integer …",29,[[["value",6],["bool",15],["inttype",4]],[["value",6],["error",3],["result",4]]]],[11,"itruncate","","Truncates the source integer to the destination integer …",29,[[["value",6],["inttype",4]],[["value",6],["error",3],["result",4]]]],[11,"promote","","Promotes the source float to the other (bigger) float …",29,[[["value",6],["floattype",4]],[["value",6],["error",3],["result",4]]]],[11,"demote","","Demotes the source float to the other (bigger) float type.",29,[[["value",6],["floattype",4]],[["value",6],["error",3],["result",4]]]],[11,"float_to_int","","Converts the float value into an integer value.",29,[[["value",6],["floattype",4],["bool",15],["inttype",4]],[["value",6],["error",3],["result",4]]]],[11,"int_to_float","","Converts the integer value into an floating point value.",29,[[["value",6],["floattype",4],["bool",15],["inttype",4]],[["value",6],["error",3],["result",4]]]],[11,"heap_addr","","Retrieves the heap address at the byte position for the …",29,[[["value",6],["immu32",3],["mem",6]],[["value",6],["error",3],["result",4]]]],[11,"load","","Loads a value of the given type from the pointer with …",29,[[["value",6],["immu32",3],["type",4]],[["value",6],["error",3],["result",4]]]],[11,"store","","Stores the given value of the given type to the pointer …",29,[[["value",6],["immu32",3],["type",4]],[["instr",6],["result",4],["error",3]]]],[11,"memory_grow","","Grows the memory by <code>new_pages</code> new pages and returns the …",29,[[["value",6],["mem",6]],[["value",6],["error",3],["result",4]]]],[11,"memory_size","","Return the current amount of memory pages of the linear …",29,[[["mem",6]],[["value",6],["error",3],["result",4]]]],[11,"return_values","","Returns the given value to the caller of the function.",29,[[],[["instr",6],["result",4],["error",3]]]],[11,"br","","Unconditionally jumps to the target basic block.",29,[[["block",6]],[["instr",6],["result",4],["error",3]]]],[11,"unreachable","","Immediately aborts execution when reached.",29,[[],[["instr",6],["result",4],["error",3]]]],[11,"if_then_else","","Conditionally jumps to either <code>then_target</code> or <code>else_target</code> …",29,[[["value",6],["block",6]],[["instr",6],["result",4],["error",3]]]],[11,"push_edge","","Pushes another edge to the <code>MatchBranchInstr</code> under …",31,[[["block",6]],[["error",3],["result",4]]]],[11,"with_edge","","Pushes another edge to the <code>MatchBranchInstr</code> under …",31,[[["block",6]],[["result",4],["error",3]]]],[11,"finish","","Finishes construction of the <code>MatchBranchInstr</code>.",31,[[["block",6]],[["instr",6],["result",4],["error",3]]]],[11,"match_branch","","Constructs a match-branch instruction.",29,[[["value",6],["inttype",4]],[["error",3],["result",4],["matchbranchbuilder",3]]]],[11,"entry_block","runwell_module","Returns the entry block of the function.",32,[[],["block",6]]],[11,"max_value","","Returns the maximum SSA value used by the function.",32,[[],["value",6]]],[11,"instruction_and_value","","Returns the nth instruction of the block and its assoc …",32,[[["usize",15],["block",6]],["option",4]]],[11,"edge_destination","","Returns the destination of the given edge.",32,[[["edge",6]],["block",6]]],[11,"edge_args","","Returns the block arguments of the given edge.",32,[[["edge",6]]]],[11,"block_params","","Returns the value parameters for the given block.",32,[[["block",6]]]],[11,"build","runwell_module::primitive","Returns a function type builder.",33,[[],["functiontypebuilder",3]]],[11,"inputs","","Returns a slice over all input types.",33,[[]]],[11,"outputs","","Returns a slice over all output types.",33,[[]]],[11,"push_input","runwell_module::builder","Pushes another input type.",34,[[]]],[11,"push_output","","Pushes another output type.",34,[[]]],[11,"finalize","","Finalizes the construction of the function type.",34,[[],["functiontype",3]]],[11,"idx","runwell_module","Returns the function\'s unique index.",35,[[],["func",6]]],[11,"ty","","Returns the function\'s signature.",35,[[],["functiontype",3]]],[11,"inputs","","Returns the function\'s input types.",35,[[]]],[11,"outputs","","Returns the function\'s output types.",35,[[]]],[11,"body","","Returns the function body.",35,[[],["functionbody",3]]],[11,"new","runwell_module::primitive","Creates a new global variable declaration.",36,[[["bool",15],["type",4]]]],[11,"ty","","The type of the global variable.",36,[[],["type",4]]],[11,"is_mutable","","Returns <code>true</code> if the global variable is mutable.",36,[[],["bool",15]]],[11,"new","","Creates a new import name.",38,[[["str",15]]]],[11,"module_name","","Returns the module name.",38,[[],["str",15]]],[11,"field_name","","Returns the field name.",38,[[],["str",15]]],[11,"new","","Creates a new linear memory declaration.",39,[[["u32",15]]]],[11,"initial_pages","","Returns the number of initial pages.",39,[[],["u32",15]]],[11,"maximum_pages","","Returns the number of maximum pages if any.",39,[[],[["u32",15],["option",4]]]],[11,"push_data","","Pushes bytes for initialization at the offset.",40,[[["initexpr",4]]]],[11,"shrink_to_fit","","Shrinks the internal buffers to consume less memory.",40,[[]]],[11,"iter","","Iterator over the initialization segments of the linear …",40,[[],["datasegmentiter",3]]],[11,"export_function","runwell_module::builder","Pushes a new function export.",42,[[["func",6],["str",15]],[["string",3],["result",4]]]],[11,"export_table","","Pushes a new table export.",42,[[["table",6],["str",15]],[["string",3],["result",4]]]],[11,"export_memory","","Pushes a new linear memory export.",42,[[["mem",6],["str",15]],[["string",3],["result",4]]]],[11,"export_global","","Pushes a new global variable export.",42,[[["str",15],["global",6]],[["string",3],["result",4]]]],[11,"reserve","","Reserves space for <code>additional</code> function declarations.",43,[[["u32",15]]]],[11,"push_function","","Pushes a new function declaration to the module and …",43,[[["functype",6]],[["result",4],["func",6],["string",3]]]],[11,"reserve","","Reserves space for <code>additional</code> function bodies.",44,[[["u32",15]]]],[11,"push_body","","Registers the function body for the given function.",44,[[["func",6],["functionbody",3]],[["string",3],["result",4]]]],[11,"reserve","","Reserves space for <code>additional</code> global variable.",45,[[["u32",15]]]],[11,"push_global","","Pushes a new global variable to the module and returns an …",45,[[["initexpr",4],["globalvariable",3]],[["global",6],["string",3],["result",4]]]],[11,"import_function","","Registers a function import to the module and returns an …",46,[[["importname",3],["functype",6]],[["result",4],["func",6],["string",3]]]],[11,"import_memory","","Registers a linear memory import to the module and …",46,[[["importname",3],["linearmemorydecl",3]],["mem",6]]],[11,"import_table","","Registers a table import to the module and returns an …",46,[[["importname",3],["tabledecl",3]],["table",6]]],[11,"import_global","","Registers a table import to the module and returns an …",46,[[["importname",3],["globalvariable",3]],["global",6]]],[11,"reserve","","Reserves space for <code>additional</code> memory declarations.",47,[[["u32",15]]]],[11,"push_memory","","Pushes a new memory declaration to the module and returns …",47,[[["linearmemorydecl",3]],[["string",3],["mem",6],["result",4]]]],[11,"push_data","","Pushes a new table initializer to the module.",48,[[["initexpr",4],["mem",6]],[["string",3],["result",4]]]],[11,"reserve","","Reserves space for <code>additional</code> table declarations.",49,[[["u32",15]]]],[11,"push_table","","Pushes a new table declaration to the module and returns …",49,[[["tabledecl",3]],[["string",3],["result",4],["table",6]]]],[11,"push_element","","Pushes a new table initializer to the module.",50,[[["initexpr",4],["table",6]],[["string",3],["result",4]]]],[11,"reserve","","Reserves space for <code>additional</code> function types.",51,[[["u32",15]]]],[11,"push_type","","Pushes a new function type to the module and returns an …",51,[[["functiontype",3]],["functype",6]]],[11,"type_section","","Returns a module types builder.",52,[[],[["result",4],["string",3],["moduletypesbuilder",3]]]],[11,"import_section","","Returns a module imports builder.",52,[[],[["result",4],["string",3],["moduleimportsbuilder",3]]]],[11,"function_section","","Returns a module function declaration builder.",52,[[],[["result",4],["string",3],["modulefunctionsbuilder",3]]]],[11,"table_section","","Returns a module table declaration builder.",52,[[],[["moduletablesbuilder",3],["string",3],["result",4]]]],[11,"memory_section","","Returns a module linear memory declaration builder.",52,[[],[["modulememoriesbuilder",3],["string",3],["result",4]]]],[11,"global_section","","Returns a module global variable builder.",52,[[],[["moduleglobalsbuilder",3],["string",3],["result",4]]]],[11,"export_section","","Returns a module export builder.",52,[[],[["result",4],["moduleexportsbuilder",3],["string",3]]]],[11,"set_start_func","","Sets the start function of the module.",52,[[["func",6]],[["string",3],["result",4]]]],[11,"table_element_section","","Returns a module table elements builder.",52,[[],[["moduletableelementsbuilder",3],["string",3],["result",4]]]],[11,"memory_data_section","","Returns a module memory data builder.",52,[[],[["modulememorydatabuilder",3],["result",4],["string",3]]]],[11,"code_section","","Returns a module function bodies builder.",52,[[],[["string",3],["result",4]]]],[11,"finalize","","Finalizes the construction of the module.",52,[[],[["result",4],["string",3],["module",3]]]],[11,"len_imported_fns","runwell_module","Returns the number of important function declarations.",53,[[],["u32",15]]],[11,"get_type","","Returns the function type at the given index if any.",53,[[["functype",6]],[["functiontype",3],["option",4]]]],[11,"get_func_type","","Returns the function type of the function if the function …",53,[[["func",6]],[["functiontype",3],["option",4]]]],[11,"get_raw_func_type","","Returns the function type of the function if the function …",53,[[["func",6]],[["option",4],["functype",6]]]],[11,"build","","Creates a new module builder.",54,[[],["modulebuilder",3]]],[11,"get_function","","Returns the function signature and body for the given …",54,[[["func",6]],[["function",3],["option",4]]]],[11,"new","runwell_module::primitive","Creates a new table declaration.",55,[[["u32",15]]]],[11,"initial_size","","Returns the initial capacity for table elements.",55,[[],["u32",15]]],[11,"maximum_size","","Returns the maximum capacity for table elements if any.",55,[[],[["u32",15],["option",4]]]],[11,"push_element","","Pushes bytes for initialization at the offset.",56,[[["initexpr",4]]]],[11,"shrink_to_fit","","Shrinks the internal buffers to consume less memory.",56,[[]]],[11,"iter","","Iterator over the initialization segments of the table …",56,[[],["elementsegmentiter",3]]]],"p":[[4,"InitExpr"],[4,"ErrorKind"],[4,"FunctionBuilderError"],[13,"InvalidPromotion"],[13,"InvalidExtension"],[13,"InvalidDemotion"],[13,"InvalidTruncation"],[13,"IncorrectOrder"],[13,"UnmatchingReinterpretBitwidths"],[13,"PredecessorForSealedBlock"],[13,"UnfilledPredecessor"],[13,"MissingBasicBlock"],[13,"BasicBlockIsAlreadySealed"],[13,"BasicBlockIsAlreadyFilled"],[13,"MissingDeclarationForVariable"],[13,"UnmatchingVariableType"],[13,"UnmatchingValueType"],[13,"ReadBeforeWriteVariable"],[13,"UnsealedBlocksUponFinalize"],[13,"UnfilledBlocksUponFinalize"],[13,"BranchAlreadyExists"],[13,"InvalidBasicBlock"],[13,"UnreachablePhi"],[13,"UnmatchingFunctionReturnType"],[13,"UnmatchingBlockParameters"],[13,"InvalidInstr"],[13,"MissingVariableForReplacement"],[3,"Error"],[3,"FunctionBuilder"],[3,"InstructionBuilder"],[3,"MatchSelectInstructionBuilder"],[3,"MatchBranchBuilder"],[3,"FunctionBody"],[3,"FunctionType"],[3,"FunctionTypeBuilder"],[3,"Function"],[3,"GlobalVariable"],[3,"GlobalVariableEntity"],[3,"ImportName"],[3,"LinearMemoryDecl"],[3,"LinearMemoryInit"],[3,"DataSegmentIter"],[3,"ModuleExportsBuilder"],[3,"ModuleFunctionsBuilder"],[3,"ModuleFunctionBodiesBuilder"],[3,"ModuleGlobalsBuilder"],[3,"ModuleImportsBuilder"],[3,"ModuleMemoriesBuilder"],[3,"ModuleMemoryDataBuilder"],[3,"ModuleTablesBuilder"],[3,"ModuleTableElementsBuilder"],[3,"ModuleTypesBuilder"],[3,"ModuleBuilder"],[3,"ModuleResources"],[3,"Module"],[3,"TableDecl"],[3,"TableInit"],[3,"ElementSegmentIter"]]},\
"runwell_wasm":{"doc":"","i":[[3,"Error","runwell_wasm","An error that occurred while parsing a Wasm input and …",null,null],[4,"ErrorKind","","Any kind of error that might occur while parsing a Wasm …",null,null],[13,"Primitive","","",0,null],[13,"Import","","",0,null],[13,"Export","","",0,null],[13,"InitExpr","","",0,null],[13,"Memory","","",0,null],[13,"Table","","",0,null],[13,"Read","","",0,null],[13,"Section","","",0,null],[13,"Module","","",0,null],[12,"message","runwell_wasm::ErrorKind","",1,null],[13,"Ir","runwell_wasm","",0,null],[13,"Translate","","",0,null],[13,"Wasmparser","","",0,null],[3,"Export","","An export item from a Wasm export section.",null,null],[4,"ExportError","","An error upon parsing, validating or operating on Wasm …",null,null],[13,"UnsupportedExportKind","","",2,null],[12,"kind","runwell_wasm::ExportError","",3,null],[4,"ExportItem","runwell_wasm","An export kind and a reference to the entity it exports.",null,null],[13,"Function","","An exported function.",4,null],[13,"Table","","An exported table.",4,null],[13,"Memory","","An exported linear memory.",4,null],[13,"Global","","An exported global variable.",4,null],[4,"ExportKind","","Supported kinds of exports.",null,null],[13,"Function","","An exported function.",5,null],[13,"Table","","An exported table.",5,null],[13,"Memory","","An exported linear memory.",5,null],[13,"Global","","An exported global variable.",5,null],[3,"FunctionType","","A function type.",null,null],[4,"TranslateError","","An error that occurred while translating from Wasm to …",null,null],[13,"UnsupportedOperator","","",6,null],[12,"offset","runwell_wasm::TranslateError","",7,null],[13,"UnimplementedOperator","runwell_wasm","",6,null],[12,"display","runwell_wasm::TranslateError","",8,null],[13,"MissingStackValue","runwell_wasm","",6,null],[12,"expected","runwell_wasm::TranslateError","",9,null],[12,"found","","",9,null],[13,"MissingWasmBlock","runwell_wasm","",6,null],[13,"RelativeDepthExceedsBlockStack","","",6,null],[12,"n","runwell_wasm::TranslateError","The nth index (from back) that was tried to accessed.",10,null],[12,"len","","The current length of the block stack.",10,null],[13,"InvalidValueStackLength","runwell_wasm","",6,null],[12,"actual_len","runwell_wasm::TranslateError","",11,null],[12,"requested_len","","",11,null],[3,"GlobalVariable","runwell_wasm","A global variable declaration.",null,null],[4,"ImportError","","An error upon parsing, validating or operating on Wasm …",null,null],[13,"UnsupportedModuleImport","","",12,null],[13,"UnsupportedEventImport","","",12,null],[3,"ImportName","","The module and field name of an imported Wasm entity.",null,null],[3,"InitExpr","","A parsed and validated Wasm constant initializer …",null,null],[4,"InitExprError","","An error that can occur upon parsing a global initializer …",null,null],[13,"UnsupportedOperator","","Encountered a generic unsupported operator.",13,null],[13,"UnsupportedV128","","Encountered an unsupported <code>V128</code> type operator.",13,null],[13,"UnsupportedRefType","","Encountered an unsupported reference type operator.",13,null],[13,"MalformedExpression","","Encountered a malformed initializer expression.",13,null],[3,"LinearMemoryDecl","","A Wasm linear memory declaration.",null,null],[3,"MemoryDataInit","","A data section item coming from the Wasm parser.",null,null],[4,"MemoryError","","An error that can occur upon parsing and validating …",null,null],[13,"Unsupported64BitMemory","","",14,null],[13,"UnsupportedSharedMemory","","",14,null],[13,"UnsupportedPassiveData","","",14,null],[3,"Const","","A Wasm translated Runwell constant value.",null,null],[4,"PrimitiveError","","An error that occurred while operating on Wasm primitives.",null,null],[13,"UnsupportedWasmType","","",15,null],[12,"unsupported","runwell_wasm::PrimitiveError","",16,null],[3,"Type","runwell_wasm","A Wasm translated Runwell type.",null,null],[8,"Read","","The Read trait allows for reading bytes from a source.",null,null],[10,"read","","Pull some bytes from this source into the specified …",17,[[],[["usize",15],["result",4],["readerror",4]]]],[4,"ReadError","","Errors returned by [<code>Read::read</code>].",null,null],[13,"EndOfStream","","The source has reached the end of the stream.",18,null],[13,"UnknownError","","An unknown error occurred.",18,null],[5,"parse","","Parses the binary WebAssembly (Wasm) bytes given through …",null,[[["vec",3]],[["result",4],["module",3],["error",3]]]],[4,"SectionError","","A general error that might occur while parsing Wasm …",null,null],[13,"Unsupported","","",19,null],[13,"Unexpected","","",19,null],[13,"UnsupportedTypeDef","","",19,null],[3,"UnexpectedWasmPayload","","An unexpected [<code>wasmparser::Payload</code>] has been encountered.",null,null],[4,"UnsupportedTypeDef","","Encountered an unsupported Wasm type definition.",null,null],[13,"Instance","","",20,null],[13,"Module","","",20,null],[4,"UnsupportedWasmSection","","Encountered an unsupported binary Wasm section.",null,null],[13,"DataCount","","",21,null],[13,"Module","","",21,null],[13,"Instance","","",21,null],[13,"Alias","","",21,null],[13,"Event","","",21,null],[13,"Unknown","","",21,null],[3,"TableDecl","","A Wasm table declaration.",null,null],[4,"TableError","","An error that might occur while parsing or validating …",null,null],[13,"InvalidTableElementType","","",22,null],[13,"UnsupportedNullElementItem","","",22,null],[13,"UnsupportedPassiveElement","","",22,null],[13,"UnsupportedDeclaredElement","","",22,null],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_string","","",23,[[],["string",3]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"get_hash","","",2,[[],["u64",15]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"get_hash","","",25,[[],["u64",15]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"get_hash","","",12,[[],["u64",15]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"get_hash","","",13,[[],["u64",15]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"get_hash","","",15,[[],["u64",15]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_string","","",18,[[],["string",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_string","","",33,[[],["string",3]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_string","","",21,[[],["string",3]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_string","","",20,[[],["string",3]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_string","","",22,[[],["string",3]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"from","","",0,[[["translateerror",4]],["errorkind",4]]],[11,"from","","",0,[[["binaryreadererror",3]],["errorkind",4]]],[11,"from","","",0,[[["sectionerror",4]],["errorkind",4]]],[11,"from","","",0,[[["readerror",4]],["errorkind",4]]],[11,"from","","",0,[[["exporterror",4]],["errorkind",4]]],[11,"from","","",0,[[["memoryerror",4]],["errorkind",4]]],[11,"from","","",0,[[["string",3]],["errorkind",4]]],[11,"from","","",0,[[["error",3]],["errorkind",4]]],[11,"from","","",0,[[["importerror",4]],["errorkind",4]]],[11,"from","","",0,[[["initexprerror",4]],["errorkind",4]]],[11,"from","","",0,[[["tableerror",4]],["errorkind",4]]],[11,"from","","",0,[[["primitiveerror",4]],["errorkind",4]]],[11,"from","","",15,[[["type",4]],["primitiveerror",4]]],[11,"from","","",32,[[["i32",15]]]],[11,"from","","",32,[[["i64",15]]]],[11,"from","","",32,[[["ieee32",3]]]],[11,"from","","",32,[[["ieee64",3]]]],[11,"cmp","","",2,[[["exporterror",4]],["ordering",4]]],[11,"cmp","","",25,[[["functiontype",3]],["ordering",4]]],[11,"eq","","",2,[[["exporterror",4]],["bool",15]]],[11,"ne","","",2,[[["exporterror",4]],["bool",15]]],[11,"eq","","",25,[[["functiontype",3]],["bool",15]]],[11,"ne","","",25,[[["functiontype",3]],["bool",15]]],[11,"eq","","",6,[[["translateerror",4]],["bool",15]]],[11,"ne","","",6,[[["translateerror",4]],["bool",15]]],[11,"eq","","",12,[[["importerror",4]],["bool",15]]],[11,"eq","","",13,[[["initexprerror",4]],["bool",15]]],[11,"eq","","",15,[[["primitiveerror",4]],["bool",15]]],[11,"ne","","",15,[[["primitiveerror",4]],["bool",15]]],[11,"eq","","",18,[[["readerror",4]],["bool",15]]],[11,"eq","","",19,[[["sectionerror",4]],["bool",15]]],[11,"ne","","",19,[[["sectionerror",4]],["bool",15]]],[11,"eq","","",33,[[["unexpectedwasmpayload",3]],["bool",15]]],[11,"ne","","",33,[[["unexpectedwasmpayload",3]],["bool",15]]],[11,"eq","","",21,[[["unsupportedwasmsection",4]],["bool",15]]],[11,"eq","","",20,[[["unsupportedtypedef",4]],["bool",15]]],[11,"eq","","",22,[[["tableerror",4]],["bool",15]]],[11,"ne","","",22,[[["tableerror",4]],["bool",15]]],[11,"partial_cmp","","",2,[[["exporterror",4]],[["option",4],["ordering",4]]]],[11,"lt","","",2,[[["exporterror",4]],["bool",15]]],[11,"le","","",2,[[["exporterror",4]],["bool",15]]],[11,"gt","","",2,[[["exporterror",4]],["bool",15]]],[11,"ge","","",2,[[["exporterror",4]],["bool",15]]],[11,"partial_cmp","","",25,[[["functiontype",3]],[["option",4],["ordering",4]]]],[11,"lt","","",25,[[["functiontype",3]],["bool",15]]],[11,"le","","",25,[[["functiontype",3]],["bool",15]]],[11,"gt","","",25,[[["functiontype",3]],["bool",15]]],[11,"ge","","",25,[[["functiontype",3]],["bool",15]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"hash","","",2,[[]]],[11,"hash","","",25,[[]]],[11,"hash","","",12,[[]]],[11,"hash","","",13,[[]]],[11,"hash","","",15,[[]]],[11,"try_from","","",5,[[["externalkind",4]],["result",4]]],[11,"try_from","","",24,[[["export",3]],["result",4]]],[11,"try_from","","",25,[[["functype",3]],["result",4]]],[11,"try_from","","",26,[[["globaltype",3]],["result",4]]],[11,"try_from","","",28,[[["initexpr",3]],["result",4]]],[11,"try_from","","",29,[[["memorytype",4]],["result",4]]],[11,"try_from","","",30,[[["data",3]],["result",4]]],[11,"try_from","","",31,[[["type",4]],["result",4]]],[11,"try_from","","",34,[[["tabletype",3]],["result",4]]],[11,"source","","",0,[[],[["error",8],["option",4]]]],[11,"source","","",19,[[],[["error",8],["option",4]]]],[11,"set_span","","Sets or overwrites the span of the error.",23,[[["span",3]]]],[11,"with_span","","Sets or overwrites the span of the error and returns <code>self</code>.",23,[[["span",3]]]],[11,"set_context","","Sets or overwrites the context of the error.",23,[[]]],[11,"with_context","","Sets or overwrites the context of the error and returns …",23,[[]]],[11,"field","","Returns the export item\'s field name.",24,[[],["str",15]]],[11,"item","","Returns the export item\'s kind and unique ID.",24,[[],["exportitem",4]]],[11,"into_inner","","Returns the Runwell function type.",25,[[],["functiontype",3]]],[11,"unimplemented_operator","","Creates a new error indicating that a supported but …",6,[[["operator",4]]]],[11,"into_inner","","Returns the inner Runwell global variable.",26,[[],["globalvariable",3]]],[11,"new","","Creates a new import name from the given module and field …",27,[[["str",15]]]],[11,"module_name","","Returns the module name of the import.",27,[[],["str",15]]],[11,"field_name","","Returns the field name of the import.",27,[[],["str",15]]],[11,"into_inner","","Returns the inner Runwell initializer expression.",28,[[],["initexpr",4]]],[11,"into_inner","","Returns the inner Runwell linear memory declaration.",29,[[],["linearmemorydecl",3]]],[11,"memory","","Returns the linear memory ID of the data segment.",30,[[],["mem",6]]],[11,"offset","","Returns the expression denoting the offset for the data …",30,[[],["initexpr",3]]],[11,"bytes","","Returns the bytes to initialize the linear memory segment.",30,[[]]],[11,"into_inner","","Returns the Runwell type.",31,[[],["type",4]]],[11,"into_inner","","Returns the Runwell constant value.",32,[[],["const",4]]],[11,"into_inner","","Returns the inner Runwell table declaration.",34,[[],["tabledecl",3]]]],"p":[[4,"ErrorKind"],[13,"Module"],[4,"ExportError"],[13,"UnsupportedExportKind"],[4,"ExportItem"],[4,"ExportKind"],[4,"TranslateError"],[13,"UnsupportedOperator"],[13,"UnimplementedOperator"],[13,"MissingStackValue"],[13,"RelativeDepthExceedsBlockStack"],[13,"InvalidValueStackLength"],[4,"ImportError"],[4,"InitExprError"],[4,"MemoryError"],[4,"PrimitiveError"],[13,"UnsupportedWasmType"],[8,"Read"],[4,"ReadError"],[4,"SectionError"],[4,"UnsupportedTypeDef"],[4,"UnsupportedWasmSection"],[4,"TableError"],[3,"Error"],[3,"Export"],[3,"FunctionType"],[3,"GlobalVariable"],[3,"ImportName"],[3,"InitExpr"],[3,"LinearMemoryDecl"],[3,"MemoryDataInit"],[3,"Type"],[3,"Const"],[3,"UnexpectedWasmPayload"],[3,"TableDecl"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);